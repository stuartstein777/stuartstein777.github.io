{"version":3,"sources":["exfn/app.cljs"],"mappings":"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","names":["exfn.app/event-type-legend","exfn.app/day-detail","cljs.core/deref","selected-date","re_frame.core.subscribe","events","iter__4622__auto__","s__31587","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__31589","cljs.core/chunk-buffer","i__31588","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31586","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","event","exfn.logic/events-for-day","G__31591","G__31593","exfn.logic/day-of-week-short","exfn.logic/pad-zero","re-frame.core/dispatch","exfn.app/days-in-month","year","month","last-day","cljs_time.core.last_day_of_the_month","cljs_time.core.date_time","cljs-time.core/day","exfn.app/get-days-in-month","first-day","cljs-time.core/day-of-week","days-in-month","to-pad-end","cljs.core.concat","cljs.core.repeat","cljs.core.range","cljs.core.partition_all","exfn.app/get-bottom-border","week","weeks","cljs.core._EQ_","cljs.core/last","exfn.app/get-event-color","pred__31594","expr__31595","cljs.core/=","cljs.core.get","clojure.string/lower-case","exfn.app/month-component","cljs-time.format/unparse","cljs_time.format.formatter","s__31598","b__31600","i__31599","vec__31601","cljs.core.nth","iter__31597","vec__31604","day","idx","cljs.core.map","cljs.core/vector","s__31608","b__31610","i__31609","iter__31607","s__31612","b__31614","i__31613","vec__31615","iter__31611","vec__31618","s__31622","b__31624","i__31623","vec__31625","iter__31621","vec__31628","events-for-day","cljs.core.not_EQ_","exfn.logic/events-types-on-date","js/module$node_modules$moment$moment","holiday-day?","cljs.core/some","today?","background-color","text-color","cljs.core/second","border-color","_","moment","exfn.logic/build-date","exfn.app/display-year","current-date","curent-month-events","exfn.logic/events-for-month","current-year","js/Number","working-days-remaining","exfn.logic/working-days-remaining","s__31633","b__31635","i__31634","iter__31632","s__31637","b__31639","i__31638","iter__31636","entry","cljs.core/key","cljs.core/val","clojure.string/capitalize","s__31641","b__31643","i__31642","iter__31640","p1__31631#","cljs.core.sort_by","today","event-date","G__31645","G__31647","exfn.app/format-date","date","current-view","G__31648","cljs.core/Keyword","js/Error","exfn.app/get-chevron-visibilty","G__31649","exfn.app/calendar-header","re-frame.core/dispatch-sync","exfn.app/app","exfn.app/start","reagent.dom.render","js/document","exfn.app/init","js/console.log","js/exfn","js/exfn.app","js/exfn.app.initialize","exfn.app/initialize","cljs.core/chunk-first"],"sourcesContent":["(ns exfn.app\n  (:require [reagent.dom :as dom]\n            [reagent.core :as r]\n            [re-frame.core :as rf]\n            [exfn.subscriptions]\n            [exfn.events]\n            [exfn.logic :as lgc]\n            [cljs-time.core :as time]\n            [cljs-time.format :as fmt]\n            [\"moment\" :as moment]\n            [clojure.string :as str]))\n\n(def event-type-legend\n  {\"poker night\"    [\"#317a28\" :black nil]\n   \"night out\"      [\"#a02c2d\" :white nil]\n   \"social\"         [\"#fed797\" :black nil]\n   \"pool\"           [\"#5e96ae\" :white nil]\n   \"gig\"            [\"#d3c0f9\" :black nil]\n   \"climbing\"       [\"#fb8e7e\" :black nil]\n   \"hike\"           [:magenta  :black nil]\n   \"dentist\"        [\"#2e3440\" :white \"#fc9403\"]\n   \"work event\"     [:red  :black nil]\n   \"multiple\"       [\"#f3a4ed\" :black nil]})\n\n(defn day-detail []\n  (let [selected-date @(rf/subscribe [:selected-date])\n        events        @(rf/subscribe [:calendar-events])]\n    [:div\n     [:table.table.table-sm.table-responsive\n      [:thead.thead-dark\n       [:tr\n        [:th.la \"Day\"]\n        [:th.la \"Name\"]\n        [:th.la \"Type\"]\n        [:th.la \"Location\"]\n        [:th.la \"Description\"]]]\n      [:tbody\n       (for [event (lgc/events-for-day events selected-date)]\n         [:tr\n          [:td.la\n           (str (lgc/day-of-week-short (.day (:date event))) \" \" (lgc/pad-zero (.format selected-date \"D\")))]\n          [:td.la (:name event)]\n          [:td.la (:type event)]\n          [:td.la (:location event)]\n          [:td.la (:description event)]])]]\n     [:btn.btn.btn-primary\n      {:style {:float :left\n               :margin-left 30}\n       :on-click #(rf/dispatch [:update-view :year])}\n      \"Back\"]]))\n\n(defn days-in-month [year month]\n  (let [last-day (time/last-day-of-the-month (time/date-time year month 1))]\n    (time/day last-day)))\n\n(defn get-days-in-month [year month]\n  (let [first-day (time/day-of-week (time/date-time year month 1))\n        days-in-month (days-in-month year month)\n        to-pad-end (- 42 (+ days-in-month first-day))]\n    (->> (concat\n          (repeat (dec first-day) 0)\n          (range 1 (inc days-in-month))\n          (repeat to-pad-end 0))\n         (partition-all 7))))\n\n(defn get-bottom-border [week weeks]\n  (when (= week (last weeks))\n    \"1px solid #f3f3f3\"))\n\n(defn get-event-color [events]\n  (condp = (count events)\n    0 \"#2e3440\"\n    1 (get event-type-legend (str/lower-case (first events)))\n    (get event-type-legend \"multiple\")))\n\n;; on clicking day that has event, show a popup with the event details\n\n(defn month-component [year month]\n  (let [weeks (get-days-in-month year month)\n        events @(rf/subscribe [:calendar-events])]\n    [:div.calendar-month\n     [:div.month-title \n      (str (fmt/unparse (fmt/formatter \"MMMM\") (time/date-time year month 1)))]\n     \n     ;; display day initials\n\n     [:div.day-initials\n      (for [[day idx] (map vector [\"M\" \"T\" \"W\" \"T\" \"F\" \"S\" \"S\"] (range 7))]\n        ^{:key (str \"idx-\" idx \"-DI-\" day)}\n        [:div.initial-day  day])]\n     \n     ;; display weeks\n\n     (for [week weeks]\n       \n       ^{:key (str \"week-\" week \"-month-\" month)}\n       [:div.week\n        {:style {:border-bottom  (get-bottom-border week weeks)}}\n\n     ;; display days for each week\n        (for [[day idx] (map vector week (range 0 (count week)))]\n\n          (let [events-for-day\n                (if (not= 0 day) (lgc/events-types-on-date events (moment (str year \"-\" month \"-\" day))) [])\n                holiday-day? (some #{\"Holiday\"} events-for-day)\n                today? (and (= day (.date (moment)))\n                            (= (dec month) (.month (moment)))\n                            (= year (.year (moment))))]\n            ^{:key (str \"idx-\" idx \"day-\" day \"-month-\" month)}\n            [:div.daybox\n             {:style {:border (cond holiday-day? \"1px solid green\" \n                                    today? \"1px solid #00f\"\n                                    :else \"0px solid #2e3440\")\n                      :background-color (cond\n                                          holiday-day? \"#C1E1C1\"\n                                          today? \"#97aff0\"\n                                          :else \"#2e3440\")\n                      :color (cond\n                               holiday-day? \"#000\"\n                               today? \"#00f\"\n                               :else \"#fff\")}}\n\n             ;; display day number and circle if it has event\n             [:div.day\n              (let [background-color (first (get-event-color events-for-day))\n                    text-color (second (get-event-color events-for-day))\n                    border-color (nth (get-event-color events-for-day) 2)]\n                {:style {:background-color background-color\n                         :color text-color\n                         :border (if border-color (str \"2px solid \" border-color) \"none\")}\n                 :on-click (fn [_]\n                             (let [moment (moment (lgc/build-date day month year))]\n                               (rf/dispatch [:set-selected-date moment])\n                               (rf/dispatch [:update-view :day])))})\n              (if (= 0 day)\n                \"\"\n                day)]]))])]))\n\n(defn display-year []\n  (let [current-date @(rf/subscribe [:current-date])\n        events @(rf/subscribe [:calendar-events])\n        curent-month-events (lgc/events-for-month events (.month current-date) (.year current-date))\n        current-year (js/Number (.format current-date \"YYYY\"))\n        working-days-remaining (lgc/working-days-remaining events current-year)]\n    \n    ;; display the calendar month grids\n    [:div\n     [:div.calendar-grid \n      [:div.calendar-year\n       (for [month (range 1 13)]\n         ^{:key (str \"month-\" month)}\n         [month-component current-year month])]\n      \n     ;; display the legend and this months events\n      \n      [:div      ;; legend\n       [:div.legend\n        \n        (for [entry event-type-legend]\n          ^{:key (key entry)}\n          [:div\n           [:div.legend-entry \n            [:div.legend-key\n             {:style {:background-color (first (val entry))\n                      :border (if (nth (val entry) 2) (str \"2px solid \" (nth (val entry) 2)) \"none\")}}]\n            [:div\n             (str/capitalize (key entry))]]])]\n       \n      ;; this months events\n       \n       [:div.current-months-events \n        [:h4 (str (.format (moment) \"MMMM\") \" events\")]\n        (for [event (->> curent-month-events\n                        (sort-by #(.date (:date %))))]\n          ;; if past, strikethrough\n          (let [today (moment)\n                event-date (moment (lgc/build-date (.date (:date event))\n                                                   (inc (.month (:date event)))\n                                                   (.year (:date event))))]\n            ^{:key (:id event)}\n            [:div.current-months-events-entry \n             [:div.current-months-events-entry-date\n              (str (lgc/day-of-week-short (.day (:date event))) \" \"\n                   (lgc/pad-zero (.format (:date event) \"D\")))]\n             [:div.current-months-events-entry-name \n              {:style {:text-decoration (if (.isBefore event-date today) \"line-through\" \"none\")}}\n              [:span (:name event)]]]))]]]\n            \n            [:div\n             {:style {:text-align :left\n                      :padding-left 10\n                      :padding-top 30}}\n             [:h4\n              \n              (str \"Working days remaining: \" working-days-remaining)]]]))\n\n(defn format-date [date current-view]\n  (case current-view\n    :month (.format date \"MMMM YYYY\")\n    :year (.format date \"YYYY\")\n    :list (.format date \"MMMM YYYY\")\n    :day  (.format date \"DD MMMM YYYY\")))\n\n(defn get-chevron-visibilty [current-view]\n  (case current-view \n    :day   :none\n    :inline))\n\n(defn calendar-header []                                  ;; calendar header\n  (let [current-date @(rf/subscribe [:current-date])\n        current-view @(rf/subscribe [:current-view])\n        selected-date @(rf/subscribe [:selected-date])]\n    [:div.calendar-header\n     \n     [:span.chevron-left                                   ;; left chevron <\n      {:style {:display (get-chevron-visibilty current-view)}}\n      [:i.fas.fa-chevron-left.ptr\n       {:on-click \n        (fn []\n           (if (= current-view :year)\n            (rf/dispatch-sync [:prev-year])\n            (rf/dispatch-sync [:prev-month])))}]]\n     \n     [:span.calendar-header-month                          ;; month\n      (if selected-date\n        (str (format-date selected-date current-view))\n        (str (format-date current-date current-view)))]\n     \n     [:span.chevron-right                                  ;; right chevron >\n      {:style {:display (get-chevron-visibilty current-view)}}\n      [:i.fas.fa-chevron-right.ptr\n        {:on-click \n         (fn []\n           (if (= current-view :year)\n             (rf/dispatch-sync [:next-year])\n             (rf/dispatch-sync [:next-month])))}]]\n     \n     [:span.calendar-selectors\n      [:i.fas.fa-list-alt.mr-9.ptr\n       {:on-click #(rf/dispatch-sync [:update-view :list])}]\n      [:i.fas.fa-calendar.mr-9.ptr\n       {:on-click #(rf/dispatch-sync [:update-view :month])}]\n      [:i.fas.fa-calendar-alt.ptr\n       {:on-click #(rf/dispatch-sync [:update-view :year])}]]]))\n\n(defn app []\n  (let [current-view @(rf/subscribe [:current-view])]\n    [:div\n     {:style {:text-align :center}}\n     [calendar-header]\n     [:hr]\n     (cond \n       (= :year current-view)  [display-year]\n       (= :day current-view)   [day-detail]\n       :else [:div])]))\n\n(defn ^:dev/after-load start []\n  (dom/render [app]\n              (.getElementById js/document \"app\"))) \n\n(defn ^:export init []\n  (js/console.log \"Initializing app\")\n  (start))\n\n(defonce initialize (rf/dispatch-sync [:initialize]))"]}