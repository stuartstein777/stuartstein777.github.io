{"version":3,"sources":["exfn/app.cljs"],"mappings":"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","names":["exfn.app/event-type-legend","exfn.app/day-detail","cljs.core/deref","selected-date","re_frame.core.subscribe","events","iter__4622__auto__","s__30744","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__30746","cljs.core/chunk-buffer","i__30745","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__30743","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","event","exfn.logic/events-for-day","G__30748","G__30750","exfn.logic/day-of-week-short","exfn.logic/pad-zero","re-frame.core/dispatch","exfn.app/days-in-month","year","month","last-day","cljs_time.core.last_day_of_the_month","cljs_time.core.date_time","cljs-time.core/day","exfn.app/get-days-in-month","first-day","cljs-time.core/day-of-week","days-in-month","to-pad-end","cljs.core.concat","cljs.core.repeat","cljs.core.range","cljs.core.partition_all","exfn.app/get-bottom-border","week","weeks","cljs.core._EQ_","cljs.core/last","exfn.app/get-event-color","cljs.core.prn","pred__30752","expr__30753","cljs.core/=","p1__30751#","cljs.core.remove","cljs.core.get","clojure.string/lower-case","exfn.app/month-component","cljs-time.format/unparse","cljs_time.format.formatter","s__30756","b__30758","i__30757","vec__30759","cljs.core.nth","iter__30755","vec__30762","day","idx","cljs.core.map","cljs.core/vector","s__30766","b__30768","i__30767","iter__30765","s__30770","b__30772","i__30771","vec__30773","iter__30769","vec__30776","s__30780","b__30782","i__30781","vec__30783","iter__30779","vec__30786","events-for-day","cljs.core.not_EQ_","exfn.logic/events-types-on-date","js/module$node_modules$moment$moment","holiday-day?","cljs.core/some","today?","background-color","text-color","cljs.core/second","border-color","_","moment","exfn.logic/build-date","exfn.app/display-year","current-date","curent-month-events","exfn.logic/events-for-month","current-year","js/Number","working-days-remaining","exfn.logic/working-days-remaining","s__30791","b__30793","i__30792","iter__30790","s__30795","b__30797","i__30796","iter__30794","entry","cljs.core/key","cljs.core/val","clojure.string/capitalize","s__30799","b__30801","i__30800","iter__30798","p1__30789#","cljs.core.sort_by","today","event-date","G__30803","G__30805","exfn.app/format-date","date","current-view","G__30806","cljs.core/Keyword","js/Error","exfn.app/get-chevron-visibilty","G__30807","exfn.app/calendar-header","re-frame.core/dispatch-sync","exfn.app/app","exfn.app/start","reagent.dom.render","js/document","exfn.app/init","js/console.log","js/exfn","js/exfn.app","js/exfn.app.initialize","exfn.app/initialize","cljs.core/chunk-first"],"sourcesContent":["(ns exfn.app\n  (:require [reagent.dom :as dom]\n            [reagent.core :as r]\n            [re-frame.core :as rf]\n            [exfn.subscriptions]\n            [exfn.events]\n            [exfn.logic :as lgc]\n            [cljs-time.core :as time]\n            [cljs-time.format :as fmt]\n            [\"moment\" :as moment]\n            [clojure.string :as str]))\n\n(def event-type-legend\n  {\"poker night\"    [\"#317a28\" :black nil]\n   \"night out\"      [\"#a02c2d\" :white nil]\n   \"social\"         [\"#fed797\" :black nil]\n   \"pool\"           [\"#5e96ae\" :white nil]\n   \"gig\"            [\"#d3c0f9\" :black nil]\n   \"climbing\"       [\"#fb8e7e\" :black nil]\n   \"hike\"           [:magenta  :black nil]\n   \"dentist\"        [\"#2e3440\" :white \"#fc9403\"]\n   \"work event\"     [:red  :black nil]\n   \"multiple\"       [\"#f3a4ed\" :black nil]})\n\n(defn day-detail []\n  (let [selected-date @(rf/subscribe [:selected-date])\n        events        @(rf/subscribe [:calendar-events])]\n    [:div\n     [:table.table.table-sm.table-responsive\n      [:thead.thead-dark\n       [:tr\n        [:th.la \"Day\"]\n        [:th.la \"Name\"]\n        [:th.la \"Type\"]\n        [:th.la \"Location\"]\n        [:th.la \"Description\"]]]\n      [:tbody\n       (for [event (lgc/events-for-day events selected-date)]\n         [:tr\n          [:td.la\n           (str (lgc/day-of-week-short (.day (:date event))) \" \" (lgc/pad-zero (.format selected-date \"D\")))]\n          [:td.la (:name event)]\n          [:td.la (:type event)]\n          [:td.la (:location event)]\n          [:td.la (:description event)]])]]\n     [:btn.btn.btn-primary\n      {:style {:float :left\n               :margin-left 30}\n       :on-click #(rf/dispatch [:update-view :year])}\n      \"Back\"]]))\n\n(defn days-in-month [year month]\n  (let [last-day (time/last-day-of-the-month (time/date-time year month 1))]\n    (time/day last-day)))\n\n(defn get-days-in-month [year month]\n  (let [first-day (time/day-of-week (time/date-time year month 1))\n        days-in-month (days-in-month year month)\n        to-pad-end (- 42 (+ days-in-month first-day))]\n    (->> (concat\n          (repeat (dec first-day) 0)\n          (range 1 (inc days-in-month))\n          (repeat to-pad-end 0))\n         (partition-all 7))))\n\n(defn get-bottom-border [week weeks]\n  (when (= week (last weeks))\n    \"1px solid #f3f3f3\"))\n\n(defn get-event-color [events]\n  (prn events)\n  (condp = (->> events (remove #(= \"Holiday\" %)) count)\n    0 \"#2e3440\"\n    1 (get event-type-legend (str/lower-case (first events)))\n    (get event-type-legend \"multiple\")))\n\n;; on clicking day that has event, show a popup with the event details\n\n(defn month-component [year month]\n  (let [weeks (get-days-in-month year month)\n        events @(rf/subscribe [:calendar-events])]\n    [:div.calendar-month\n     [:div.month-title \n      (str (fmt/unparse (fmt/formatter \"MMMM\") (time/date-time year month 1)))]\n     \n     ;; display day initials\n\n     [:div.day-initials\n      (for [[day idx] (map vector [\"M\" \"T\" \"W\" \"T\" \"F\" \"S\" \"S\"] (range 7))]\n        ^{:key (str \"idx-\" idx \"-DI-\" day)}\n        [:div.initial-day  day])]\n     \n     ;; display weeks\n\n     (for [week weeks]\n       \n       ^{:key (str \"week-\" week \"-month-\" month)}\n       [:div.week\n        {:style {:border-bottom  (get-bottom-border week weeks)}}\n\n     ;; display days for each week\n        (for [[day idx] (map vector week (range 0 (count week)))]\n\n          (let [events-for-day\n                (if (not= 0 day) (lgc/events-types-on-date events (moment (str year \"-\" month \"-\" day))) [])\n                holiday-day? (some #{\"Holiday\"} events-for-day)\n                today? (and (= day (.date (moment)))\n                            (= (dec month) (.month (moment)))\n                            (= year (.year (moment))))]\n            ^{:key (str \"idx-\" idx \"day-\" day \"-month-\" month)}\n            [:div.daybox\n             {:style {:border (cond holiday-day? \"1px solid green\" \n                                    today? \"1px solid #00f\"\n                                    :else \"0px solid #2e3440\")\n                      :background-color (cond\n                                          holiday-day? \"#C1E1C1\"\n                                          today? \"#97aff0\"\n                                          :else \"#2e3440\")\n                      :color (cond\n                               holiday-day? \"#000\"\n                               today? \"#00f\"\n                               :else \"#fff\")}}\n\n             ;; display day number and circle if it has event\n             [:div.day\n              (let [background-color (first (get-event-color events-for-day))\n                    text-color (second (get-event-color events-for-day))\n                    border-color (nth (get-event-color events-for-day) 2)]\n                {:style {:background-color background-color\n                         :color text-color\n                         :border (if border-color (str \"2px solid \" border-color) \"none\")}\n                 :on-click (fn [_]\n                             (let [moment (moment (lgc/build-date day month year))]\n                               (rf/dispatch [:set-selected-date moment])\n                               (rf/dispatch [:update-view :day])))})\n              (if (= 0 day)\n                \"\"\n                day)]]))])]))\n\n(defn display-year []\n  (let [current-date @(rf/subscribe [:current-date])\n        events @(rf/subscribe [:calendar-events])\n        curent-month-events (lgc/events-for-month events (.month current-date) (.year current-date))\n        current-year (js/Number (.format current-date \"YYYY\"))\n        working-days-remaining (lgc/working-days-remaining events current-year)]\n    \n    ;; display the calendar month grids\n    [:div\n     [:div.calendar-grid \n      [:div.calendar-year\n       (for [month (range 1 13)]\n         ^{:key (str \"month-\" month)}\n         [month-component current-year month])]\n      \n     ;; display the legend and this months events\n      \n      [:div      ;; legend\n       [:div.legend\n        \n        (for [entry event-type-legend]\n          ^{:key (key entry)}\n          [:div\n           [:div.legend-entry \n            [:div.legend-key\n             {:style {:background-color (first (val entry))\n                      :border (if (nth (val entry) 2) (str \"2px solid \" (nth (val entry) 2)) \"none\")}}]\n            [:div\n             (str/capitalize (key entry))]]])]\n       \n      ;; this months events\n       \n       [:div.current-months-events \n        [:h4 (str (.format (moment) \"MMMM\") \" events\")]\n        (for [event (->> curent-month-events\n                        (sort-by #(.date (:date %))))]\n          ;; if past, strikethrough\n          (let [today (moment)\n                event-date (moment (lgc/build-date (.date (:date event))\n                                                   (inc (.month (:date event)))\n                                                   (.year (:date event))))]\n            ^{:key (:id event)}\n            [:div.current-months-events-entry \n             [:div.current-months-events-entry-date\n              (str (lgc/day-of-week-short (.day (:date event))) \" \"\n                   (lgc/pad-zero (.format (:date event) \"D\")))]\n             [:div.current-months-events-entry-name \n              {:style {:text-decoration (if (.isBefore event-date today) \"line-through\" \"none\")}}\n              [:span (:name event)]]]))]]]\n            \n            [:div\n             {:style {:text-align :left\n                      :padding-left 10\n                      :padding-top 30}}\n             [:h4\n              \n              (str \"Working days remaining: \" working-days-remaining)]]]))\n\n(defn format-date [date current-view]\n  (case current-view\n    :month (.format date \"MMMM YYYY\")\n    :year (.format date \"YYYY\")\n    :list (.format date \"MMMM YYYY\")\n    :day  (.format date \"DD MMMM YYYY\")))\n\n(defn get-chevron-visibilty [current-view]\n  (case current-view \n    :day   :none\n    :inline))\n\n(defn calendar-header []                                  ;; calendar header\n  (let [current-date @(rf/subscribe [:current-date])\n        current-view @(rf/subscribe [:current-view])\n        selected-date @(rf/subscribe [:selected-date])]\n    [:div.calendar-header\n     \n     [:span.chevron-left                                   ;; left chevron <\n      {:style {:display (get-chevron-visibilty current-view)}}\n      [:i.fas.fa-chevron-left.ptr\n       {:on-click \n        (fn []\n           (if (= current-view :year)\n            (rf/dispatch-sync [:prev-year])\n            (rf/dispatch-sync [:prev-month])))}]]\n     \n     [:span.calendar-header-month                          ;; month\n      (if selected-date\n        (str (format-date selected-date current-view))\n        (str (format-date current-date current-view)))]\n     \n     [:span.chevron-right                                  ;; right chevron >\n      {:style {:display (get-chevron-visibilty current-view)}}\n      [:i.fas.fa-chevron-right.ptr\n        {:on-click \n         (fn []\n           (if (= current-view :year)\n             (rf/dispatch-sync [:next-year])\n             (rf/dispatch-sync [:next-month])))}]]\n     \n     [:span.calendar-selectors\n      [:i.fas.fa-list-alt.mr-9.ptr\n       {:on-click #(rf/dispatch-sync [:update-view :list])}]\n      [:i.fas.fa-calendar.mr-9.ptr\n       {:on-click #(rf/dispatch-sync [:update-view :month])}]\n      [:i.fas.fa-calendar-alt.ptr\n       {:on-click #(rf/dispatch-sync [:update-view :year])}]]]))\n\n(defn app []\n  (let [current-view @(rf/subscribe [:current-view])]\n    [:div\n     {:style {:text-align :center}}\n     [calendar-header]\n     [:hr]\n     (cond \n       (= :year current-view)  [display-year]\n       (= :day current-view)   [day-detail]\n       :else [:div])]))\n\n(defn ^:dev/after-load start []\n  (dom/render [app]\n              (.getElementById js/document \"app\"))) \n\n(defn ^:export init []\n  (js/console.log \"Initializing app\")\n  (start))\n\n(defonce initialize (rf/dispatch-sync [:initialize]))"]}