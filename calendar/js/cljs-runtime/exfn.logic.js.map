{"version":3,"sources":["exfn/logic.cljs"],"mappings":";;AAGA,8BAAA,9BAAMA,oEAAkBC,OAAOC;AAA/B,AAGO,sDAAA,WAAAK,1DAACC;AAAD,AAAS,oDAAA,7CAACH,uDAAY,AAAA,mFAAAE;GADtB,+CAAA,WAAAJ,1DAACC;AAAD,AAAS,OAACC,6CAAEH,aAAa,AAAQ,4CAAAC,iBAAA,7DAACG;GADlCL;;AAIP,4BAAA,5BAAMQ,gEAAgBR,OAAOS;AAA7B,AAEO,sDAAA,WAAAC,1DAACP;AAAD,AAAqB,OAAA,AAAA,oFAAAO,6BAAA,JAASD;GAD9BT;;AAGP,+BAAA,2CAAA,IAAA,MAAA,IAAA,MAAA,IAAA,MAAA,IAAA,MAAA,IAAA,MAAA,IAAA,MAAA,IAAA,1IAAKW;AASL,kCAAA,lCAAMC,4EAAsBZ,OAAOa;AAAnC,AACE,IAAMC,2GACY,+CAAA,WAAAC,1DAACZ,lGACD,6CAAA,7CAACa;AADD,AAAqB,OAAA,AAAA,oFAAAD,8BAAA,LAASF;GAD9Bb;AAAlB,AAGEc;;AAEJ,sBAAA,tBAAMG,oDAAUC;AAAhB,AACE,GAAI,OAAA,NAAGA;AACL,QAAA,gDAASA;;AACT,mDAAKA;;;AAET,wBAAA,xBAAMC,wDAAYV,IAAIW,MAAMC;AAA5B,AACE,0DAAA,uDAAA,7DAAKA,sDAASD,WAAU,AAACH,oBAASR;;AAEpC,mBAAA,nBAAMa,8CAAOC,EAAEC;AAAf,AACE,AAACC,qGAAIF,EAAEC;;AACPA;;AAEF,0CAAA,1CAAME,4FAA8BC,IAAIC;AAAxC,AACE,IAAMC,uBAAqB,gCAAA,/BAAK,qBAAA,rBAAOD,iBAAYD;AAAnD,AACE,uBAEK,AAACxB,+CAAO,WAAK+B,1EAGbC;AAHQ,AACE,iBAAA,jBAACb,uBAAYY;;AACb,SAAI,6CAAA,7CAAC9B,iDAAI,AAAM8B,cAAI,6CAAA,7CAAC9B,iDAAI,AAAM8B;GAHxC,4CAAA,WAAAH,vDAACC;AAAD,AAAM,OAACC,kCAAO,4CAAS,AAAQN,AAAK,gBAAAI,iBAAA;GADpC,AAACD,8CAAM,wBAAA,vBAAKD;;AAOrB,oCAAA,pCAAMO,gFAAwBpC,OAAOqC;AAArC,AACE,IAAMT,cAAY,AAACK,kCAAO,4DAAA,fAAKI;IACzBC,iBAAe,CAAA,MAAK,2DAAA,3DAAOV,iBAAY,AAAM,AAACK;IAC9CM,WAAS,gBAII,+CAAA,WAAAG,1DAACvC,hBACDgC;AADA,AAAS,SAAK,8CAAAO,7CAAI,AAAM,AAACT,oEAAY,CAAAS,oBAAMd;GAD3C,4CAAA,WAAAa,vDAACT;AAAD,AAAM,yCAAAS,lCAACR;qGAFP,+CAAA,WAAAO,1DAACrC,lGACD,4CAAA,5CAAC6B;AADD,AAAS,oDAAA,7CAAC5B,uDAAY,AAAA,mFAAAoC;GADrBxC;IAMd2C,WAAS,AAACjB,wCAA6B,AAAM,AAACO,0CAASL;AAR7D,AAUE,QAAA,CAAGU,iBAAeK,YAASJ;;AAE/B","names":["exfn.logic/events-for-month","events","month-number","p1__29470#","cljs.core.filter","cljs.core._EQ_","cljs.core.get","p1__29471#","cljs.core.remove","exfn.logic/events-for-day","day","p1__29472#","exfn.logic/day-of-week-short","exfn.logic/events-types-on-date","date","result","p1__29473#","cljs.core.mapv","exfn.logic/pad-zero","num","exfn.logic/build-date","month","year","exfn.logic/debug","m","x","cljs.core.prn","exfn.logic/weekends-between-now-and-eoy","now","end-of-year","total-days-remaining","cljs.core.range","p1__29474#","cljs.core.map","js/module$node_modules$moment$moment","d","cljs.core/count","exfn.logic/working-days-remaining","selected-year","days-remaining","holidays","p1__29475#","p1__29476#","p1__29477#","weekends"],"sourcesContent":["(ns exfn.logic\n  (:require [\"moment\" :as moment]))\n\n(defn events-for-month [events month-number]\n  (->> events\n       (filter #(= month-number (.month (get % :date))))\n       (remove #(= \"Holiday\" (:type %)))))\n\n(defn events-for-day [events day]\n  (->> events\n       (filter #(-> % :date (.isSame day \"day\")))))\n\n(def day-of-week-short\n  {1 \"MON\"\n   2 \"TUE\"\n   3 \"WED\"\n   4 \"THU\"\n   5 \"FRI\"\n   6 \"SAT\"\n   0 \"SUN\"})\n   \n(defn events-types-on-date [events date]\n  (let [result (->> events\n                    (filter #(-> % :date (.isSame date \"day\")))\n                    (mapv :type))]\n    result))\n\n(defn pad-zero [num]\n  (if (< num 10)\n    (str \"0\" num)\n    (str num)))\n\n(defn build-date [day month year]\n  (str year \"-\" month \"-\" (pad-zero day)))\n\n(defn debug [m x]\n  (prn m x)\n  x)\n\n(defn weekends-between-now-and-eoy [now end-of-year]\n  (let [total-days-remaining (inc (.diff end-of-year now \"days\"))]\n    (->> (range (inc total-days-remaining))\n         (map #(moment (str (-> (.clone now) (.add % \"days\")))))\n         (filter (fn [d] \n                   (debug \"day\" d)\n                   (or (= 0 (.day d)) (= 6 (.day d)))))\n         count)))\n\n(defn working-days-remaining [events selected-year]\n  (let [end-of-year (moment (str selected-year \"-12-31\"))\n        days-remaining (+ 2 (.diff end-of-year (.utc (moment)) \"days\"))\n        holidays (->> events\n                     (filter #(= \"Holiday\" (:type %)))\n                     (map :date)\n                     (map #(moment %))\n                     (filter #(and (<= (.utc (moment)) %) (<= % end-of-year)))\n                     count)\n        weekends (weekends-between-now-and-eoy (.utc (moment)) end-of-year)\n        ]\n    (- days-remaining weekends holidays)))\n\n(comment\n  \n  ;; todo - when viewing a specific day, show the day in the date field, not the current day\n)\n  "]}