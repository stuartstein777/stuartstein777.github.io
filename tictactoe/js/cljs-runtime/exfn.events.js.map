{"version":3,"sources":["exfn/events.cljs"],"mappings":";;;;AAIA,AAAA,AAACA,AAEA,AAAKC,AAAEA;AAAP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAQD,AAAA,AAAAC,AAAMG,AAAmBC,AAAgBG;AAAzC,AAAA,AAAAN,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAgCI;AAAhC,AAAAH,AAAAD,AAAA,AAAA,AAAoCK;AAApC,AACE,AAAME,AAAU,AAAA,AAACC,AAASL,AAAOC,AAAIC,AAAKC;AAA1C,AAEK,AAAA,AAAA,AAACG,AAAaF,AACd,AAAA,AAACE,AAAc,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AACf,AAACD,AACD,AAACA;AAFc,AAAA,AAAAC,AAAAA,AAAAA,AAAeJ,AAAAA;AAC9B,AAAe,AAACK,AAAQJ,AACxB,AAAmB,AAACK,AAAeL;;AAE1C,AAAA,AAACV,AAEA,AAAAgB,AAAAC;AAAA,AAAA,AAAAC,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAiDS;AAAjD,AAAAL,AAAAJ,AAAA,AAAaZ;AAAb,AAAAgB,AAAAJ,AAAA,AAAmBT;AAAnB,AAAAa,AAAAJ,AAAA,AAA0BO;AAA1B,AAAAH,AAAAJ,AAAA,AAAiCQ;AAAjCH,AAAAN;AAAA,AAAAb,AAAAmB,AAAA,AAAA,AAAsDtB;AAAtDuB,AAAA,AAAApB,AAAAmB,AAAA,AAAA;AAAA,AAAAnB,AAAAoB,AAAA,AAAA,AAAyDjB;AAAzD,AAAAH,AAAAoB,AAAA,AAAA,AAA6DhB;AAA7D,AACE,AAAI,AAAK,AAAA,AAACoB,AAAE,AAAA,AAACC,AAAOvB,AAAOC,AAAIC,AACtB,AAACsB,AAAIL,AACL,AAACK,AAAIJ;AACZ,AAAAK,AACM,AAAA,AAAC1B,AAAkBC,AAAOC,AAAIC,AAAKC;AADzCsB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAZ,AAAA,AAAAY,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAC,AAAAU,AAAAA;AAAAA,AAAkDC;AAAlD,AAAAV,AAAAS,AAAA,AAAcN;AAAd,AAAAH,AAAAS,AAAA,AAAqBL;AAArB,AAAAJ,AAAAS,AAAA,AAAgCzB;AAAhC,AAAAgB,AAAAS,AAAA,AAAsCtB;AAAtC,AAEE,AAAI,AAAAwB,AAAIR;AAAJ,AAAA,AAAAQ;AAAAA;;AAAWP;;;AACbM;;AACA,AAAC3B,AAAkBC,AACA,AAAC4B,AAAS5B,AAAMG,AAChBA;;;AACvBkB","names":["re_frame.core.reg_event_db","_","p__8945","vec__8946","cljs.core.nth","exfn.events/update-game-state","board","row","col","player","new-board","cljs.core/assoc-in","cljs.core.assoc","fexpr__8949","exfn.gamelogic/winner?","exfn.gamelogic/no-more-moves?","p__8950","p__8951","map__8952","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","vec__8953","vec__8956","winner","game-over?","db","cljs.core._EQ_","cljs.core.get_in","cljs.core/not","map__8960","game","or__4126__auto__","exfn.gamelogic/cpu-move"],"sourcesContent":["(ns exfn.events\n  (:require [re-frame.core :as rf]\n            [exfn.gamelogic :refer [winner? no-more-moves? cpu-move]]))\n\n(rf/reg-event-db\n :initialize\n (fn [_ _]\n   {:board [[:_ :_ :_]\n            [:_ :_ :_]\n            [:_ :_ :_]]\n    :player :x\n    :game-over? false\n    :winner nil}))\n\n(defn update-game-state [board [row col] player]\n  (let [new-board (assoc-in board [row col] player)]\n   (-> {}\n       (assoc :board new-board)\n       (assoc :player ({:x :o :o :x} player))\n       (assoc :winner (winner? new-board))\n       (assoc :game-over? (no-more-moves? new-board)))))\n\n(rf/reg-event-db\n :update-board\n (fn [{:keys [board player winner game-over?] :as db} [_ [row col]]]\n   (if (and (= (get-in board [row col]) :_)\n            (not winner)\n            (not game-over?))\n     (let [{:keys [winner game-over? board player] :as game}\n           (update-game-state board [row col] player)]\n       (if (or winner game-over?)\n         game\n         (update-game-state board \n                            (cpu-move board player)\n                            player)))\n     db)))"]}