{"version":3,"sources":["exfn/logic.cljs"],"mappings":";AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAUL,AAAA,AAAMC,AAAmBC;AAAzB,AACE,AAACC,AAAK,AAACC,AAAKF,AAAU,AAACG,AAAQL;;AAEhC,AAAA,AAAMM,AAAaC,AAASC;AAA5B,AACE,AAACC,AAAI,AAAKC,AAAEC;AAAP,AACE,AACE,AAACC,AAAEF,AAAEC;AADP;;AAAA,AAEE,AAAAE,AAAC,AAACC,AAAIP;AAAN,AAAA,AAAAM,AAAAA,AAAAA,AAAgBF,AAAAA;;AAFlB;;AAAA,AAAA;;;;AAIFJ,AAASC;;AAEjB,AAAA,AAAMO,AAAiBC;AAAvB,AACE,AAAAC,AAAOG;AAAPF,AAASF;AAAT,AAAA,AAAA,AAAAC,AAAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAC;AAAA,AAAA;;AAAA,AAAA,AAAAD,AAAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAC;AAAA,AAAA;;AAAA,AAAA,AAAAD,AAAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAC;AAAA,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAD","names":["exfn.logic/colors","exfn.logic/generate-solution","no-colors","cljs.core/keys","cljs.core.take","cljs.core/shuffle","exfn.logic/check-guess","solution","guess","cljs.core.map","s","g","cljs.core._EQ_","fexpr__34826","cljs.core/set","exfn.logic/get-clue-marker","clue","pred__34827","expr__34828","js/Error","cljs.core/="],"sourcesContent":["(ns exfn.logic \n  (:require [re-frame.core :as rf]))\n\n(def colors\n  {:red    \"red\"\n   :orange \"orange\"\n   :yellow \"yellow\"\n   :green  \"green\" \n   :pink   \"pink\"\n   :purple \"purple\"\n   :cyan   \"cyan\"\n   :blue   \"blue\"})\n\n(defn generate-solution [no-colors]\n  (keys (take no-colors (shuffle colors))))\n\n (defn check-guess [solution guess]\n   (map (fn [s g]\n          (cond\n            (= s g)            :pos-and-color\n            ((set solution) g) :color\n            :else              :wrong))\n        solution guess))\n\n(defn get-clue-marker [clue]\n  (condp = clue\n    :pos-and-color [:i.fas.fa-circle]\n    :color         [:i.far.fa-circle]\n    :wrong         [:i.fas.fa-circle.wrong]))\n\n\n  \n  "]}