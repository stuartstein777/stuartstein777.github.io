{"version":3,"sources":["re_pressed/core.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__29417","vec__29418","seq__29419","cljs.core/seq","first__29420","cljs.core/first","cljs.core/next","map__29421","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","_","event-type","args-map","p__29423","p__29424","map__29425","cljs.core.get","vec__29426","cljs.core.nth","map__29429","db","event-keys","clear-keys","always-listen-keys","prevent-default-keys","opts","cljs.core/assoc-in","p__29432","p__29433","map__29434","vec__29435","map__29438","p__29441","p__29442","map__29443","vec__29444","map__29447"],"sourcesContent":["(ns re-pressed.core\n  (:require\n   [re-frame.core :as rf]\n   [re-pressed.impl]\n   ))\n\n\n\n(rf/reg-event-fx\n ::add-keyboard-event-listener\n ;; event-type can be:\n ;; \"keydown\",\n ;; \"keypress\", or\n ;; \"keyup\"\n (fn [_ [_ event-type & {:as args-map}]]\n   {::keyboard-event {:event-type event-type :arguments args-map}}))\n\n\n(rf/reg-event-fx\n ::set-keydown-rules\n (fn [{:keys [db]}\n      [_ {:keys [event-keys\n                 clear-keys\n                 always-listen-keys\n                 prevent-default-keys]\n          :as   opts}]]\n   {:db (-> db\n            (assoc-in [::keydown :keys] nil)\n            (assoc-in [::keydown :event-keys] event-keys)\n            (assoc-in [::keydown :clear-keys] clear-keys)\n            (assoc-in [::keydown :always-listen-keys] always-listen-keys)\n            (assoc-in [::keydown :prevent-default-keys] prevent-default-keys)\n            )}))\n\n\n(rf/reg-event-fx\n ::set-keypress-rules\n (fn [{:keys [db]}\n      [_ {:keys [event-keys\n                 clear-keys\n                 always-listen-keys]\n          :as   opts}]]\n   {:db (-> db\n            (assoc-in [::keypress :keys] nil)\n            (assoc-in [::keypress :event-keys] event-keys)\n            (assoc-in [::keypress :clear-keys] clear-keys)\n            (assoc-in [::keypress :always-listen-keys] always-listen-keys)\n            )}))\n\n\n(rf/reg-event-fx\n ::set-keyup-rules\n (fn [{:keys [db]}\n      [_ {:keys [event-keys\n                 clear-keys\n                 always-listen-keys]\n          :as   opts}]]\n   {:db (-> db\n            (assoc-in [::keyup :keys] nil)\n            (assoc-in [::keyup :event-keys] event-keys)\n            (assoc-in [::keyup :clear-keys] clear-keys)\n            (assoc-in [::keyup :always-listen-keys] always-listen-keys)\n            )}))\n"]}