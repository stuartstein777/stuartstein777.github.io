{"version":3,"sources":["exfn/logic.cljs"],"mappings":";;;;;AAKA,AAAA,AAAMA,AAA8BC;AAApC,AACE,AAAMC,AAASD,AAAQE,AAAK,AAAA,AAACC,AAAMC;AAAnC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACK,AAAA,AAAK,AAAA,AAAO,AAAG,AAAA,AAAA,AAACJ,AAAAA,AAAAA,AAAWC,AAC3B,AAAA,AAAK,AAAA,AAAO,AAAG,AAAA,AAAA,AAACD,AAAAA,AAAAA,AAAWC,AAC3B,AAAA,AAAK,AAAA,AAAO,AAAG,AAAA,AAAA,AAACD,AAAAA,AAAAA,AAAWC,AAC3B,AAAA,AAAK,AAAA,AAAO,AAAG,AAAA,AAAA,AAACD,AAAAA,AAAAA,AAAWC,AAC3B,AAAA,AAAK,AAAA,AAAO,AAAG,AAAA,AAAA,AAACD,AAAAA,AAAAA,AAAWC,AAC3B,AAAA,AAAK,AAAA,AAAO,AAAG,AAAA,AAAA,AAACD,AAAAA,AAAAA,AAAWC","names":["exfn.logic/guess-distribution-histogram","guesses","max","cljs.core/vals","cljs.core.apply","cljs.core/max"],"sourcesContent":["(ns exfn.logic\n  (:require [clojure.set :as set]\n            [clojure.string :as str]\n            [cljs.reader :as rdr]))\n\n(defn guess-distribution-histogram [guesses]\n  (let [max (->> guesses vals (apply max))]\n    {1 (int (* 250 (/ (guesses 1) max)))\n     2 (int (* 250 (/ (guesses 2) max)))\n     3 (int (* 250 (/ (guesses 3) max)))\n     4 (int (* 250 (/ (guesses 4) max)))\n     5 (int (* 250 (/ (guesses 5) max)))\n     6 (int (* 250 (/ (guesses 6) max)))}))\n"]}