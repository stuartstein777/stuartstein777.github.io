{"version":3,"sources":["exfn/app.cljs"],"mappings":"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","names":["exfn.app/app","cljs.core/deref","board","re_frame.core.subscribe","selected-cell","targets","remaining-pegs","game-over?","game-win?","iter__4529__auto__","s__32814","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__32816","cljs.core/chunk-buffer","i__32815","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__32813","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","c","cljs.core.range","cell","exfn.logic/get-cell-id","cljs.core._EQ_","exfn.logic/target-cell?","re-frame.core/dispatch-sync","exfn.logic/has-marble?","exfn.app/start","reagent.dom.render","js/document","exfn.app/init","js/exfn","js/exfn.app","js/exfn.app.initialize","exfn.app/initialize","cljs.core/chunk-first"],"sourcesContent":["(ns exfn.app\n  (:require [reagent.dom :as dom]\n            [re-frame.core :as rf]\n            [exfn.subscriptions]\n            [exfn.events]\n            [exfn.logic :as lgc]\n            [goog.string.format]))\n\n;; -- App -------------------------------------------------------------------------\n\n(defn app []\n  (let [board          @(rf/subscribe [:board])\n        selected-cell  @(rf/subscribe [:selected-cell])\n        targets        @(rf/subscribe [:targets])\n        remaining-pegs @(rf/subscribe [:remaining-pegs])\n        game-over?     @(rf/subscribe [:game-over?])\n        game-win?      @(rf/subscribe [:game-win?])]\n    [:div.container\n     (when game-over?\n         [:div.game-over \"Game Over\"])\n     (when game-win?\n       [:div.winner \"Winner!\"])\n     [:div.row\n      [:div.col.col-lg-8\n       [:h1 \"Peg Solitaire\"]]\n      [:div.col.col-lg-4 {:style {:text-align    :right\n                                  :padding-right 50}}\n       [:i.fab.fa-github]\n       [:a {:href  \"https://github.com/stuartstein777/peg-solitaire\"\n            :style {:text-decoration :none}}\n        \" (repo) \"]\n       \"|\"\n       [:a {:href  \"https://stuartstein777.github.io/\"\n            :style {:text-decoration :none}}\n        \" other projects\"]]]\n     [:div.row\n      [:div.col.col-lg-12\n       [:div.board\n        (for [c (range 1 49)]\n          (let [cell (lgc/get-cell-id c)]\n            (if (= cell -1)\n              [:div.inactive]\n              [:div\n               {:on-click (if (lgc/target-cell? targets cell)\n                            #(rf/dispatch-sync [:jump cell])\n                            #(rf/dispatch-sync [:select-cell cell]))\n                :class    (cond\n                            (= cell selected-cell)          \"selected\"\n                            (lgc/target-cell? targets cell) \"target\"\n                            :else                           \"board-cell\")}\n               [:div.concave\n                (when (lgc/has-marble? board cell)\n                  [:div.marble])]])))]]]\n     [:div.row\n      {:style {:padding-top 20}}\n      [:div.col.col-lg-4\n       (str \"Remaining Pegs \" remaining-pegs)]\n      [:div.col.col-lg-4\n       [:button.btn.btn-primary\n        {:on-click #(rf/dispatch-sync [:initialize])}\n        \"Reset Board\"]]]]))\n\n;; -- After-Load --------------------------------------------------------------------\n;; Do this after the page has loaded.\n;; Initialize the initial db state.\n(defn ^:dev/after-load start\n  []\n  (dom/render [app]\n              (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  (start))\n\n; dispatch the event which will create the initial state. \n(defonce initialize (rf/dispatch-sync [:initialize]))\n\n(comment\n\n\n  (rf/dispatch-sync [:set-board-near-win])\n\n  \n\n'({:cell 4, :direction 3, :has-jump true}\n  {:cell 6, :direction 3, :has-jump true}\n  {:cell 8, :direction 1, :has-jump true}\n  {:cell 10, :direction 1, :has-jump true}\n  {:cell 10, :direction 2, :has-jump true}\n  {:cell 12, :direction 2, :has-jump true}\n  {:cell 16, :direction 0, :has-jump true}\n  {:cell 16, :direction 3, :has-jump true}\n  {:cell 18, :direction 0, :has-jump true}\n  {:cell 18, :direction 3, :has-jump true}\n  {:cell 22, :direction 1, :has-jump true}\n  {:cell 24, :direction 1, :has-jump true}\n  {:cell 24, :direction 2, :has-jump true}\n  {:cell 26, :direction 2, :has-jump true}\n  {:cell 28, :direction 0, :has-jump true}\n  {:cell 30, :direction 0, :has-jump true}\n  )\n\n  )"]}