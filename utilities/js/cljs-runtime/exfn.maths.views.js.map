{"version":3,"sources":["exfn/maths/views.cljs"],"mappings":"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","names":["exfn.maths.views/gcd","cljs.core/deref","p1__17164#","gcd-result","re_frame.core.subscribe","re-frame.core/dispatch-sync","exfn.maths.views/lcm","p1__17165#","lcm-result","exfn.maths.views/is-prime?","p1__17166#","result","exfn.maths.views/pentagonal","is-pentagonal?","is-generalised-pentagonal?","e","exfn.maths.views/stat-analysis","stats","clojure.string.join"],"sourcesContent":["(ns exfn.maths.views\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]\n            [goog.string :as gstring]\n            [clojure.string :as str]\n            [goog.string.format]\n            [exfn.maths.events :as events]\n            [exfn.maths.subscriptions :as subscriptions]))\n\n(defn gcd []\n  (let [gcd-result @(rf/subscribe [:math/gcd-result])]\n  [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n   [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n    [:h1.h2 \"Greatest Common Divisor\"]]\n   [:div.row\n    [:label \"Enter values\"]]\n   [:div.row\n    [:textarea.form-control.gcd-values\n     {:rows        3\n      :cols        30\n      :placeholder \"18 36 81\"\n      :on-change #(rf/dispatch-sync [:set-gcd-values (-> % .-target .-value)])\n      :value @(rf/subscribe [:gcd-values])}]]\n   [:div.row\n    [:button.btn.btn-primary.calculate-gcd-btn \n     {:on-click #(rf/dispatch-sync [:calculate-gcd])}\n     \"Calculate GCD\"]]\n   [:div.row.gcd-result-row\n    [:div.gcd-result (str \"Result: \" gcd-result)]]]))\n\n(defn lcm []\n  (let [lcm-result @(rf/subscribe [:math/lcm-result])]\n    [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n     [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n      [:h1.h2 \"Least Common Multiple\"]]\n      [:div.row\n       [:label \"Enter values\"]]\n      [:div.row\n       [:textarea.form-control.gcd-values\n        {:rows        3\n         :cols        30\n         :placeholder \"18 36 81\"\n         :on-change #(rf/dispatch-sync [:set-lcm-values (-> % .-target .-value)])\n         :value @(rf/subscribe [:lcm-values])}]]\n      [:div.row\n       [:button.btn.btn-primary.calculate-gcd-btn\n        {:on-click #(rf/dispatch-sync [:calculate-lcm])}\n        \"Calculate LCM\"]]\n      [:div.row.gcd-result-row\n       [:div.gcd-result (str \"Result: \" lcm-result)]]]))\n\n(defn is-prime? []\n  (let [result @(rf/subscribe [:math/is-prime-result])]\n    [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n     [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n      [:h1.h2 \"Check if a number is prime\"]]\n     [:div.row\n      [:label \"Enter value to check\"]]\n     [:div.row\n      [:input.form-control.is-prime-value-textbox\n       {:on-change #(rf/dispatch-sync [:set-is-prime-value (-> % .-target .-value)])\n        :value @(rf/subscribe [:math/is-prime-value])\n        :type \"number\"}]]\n     [:div.row\n      [:button.btn.btn-primary.is-prime-btn\n       {:on-click #(rf/dispatch-sync [:check-is-prime])}\n       \"Check\"]]\n     [:div.row.gcd-result-row\n      [:div.gcd-result (str \"Result: \" result)]]]))\n\n(defn pentagonal []\n  (let [is-pentagonal? @(rf/subscribe [:math/is-pentagonal-result])\n        is-generalised-pentagonal? @(rf/subscribe [:math/is-generalised-pentagonal-result])]\n  [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n   [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n    [:h1.h2 \"Pentagonal Numbers\"]]\n   [:div\n    [:h4 \"References\"]\n    [:a {:href \"https://en.wikipedia.org/wiki/Pentagonal_number\"} \"Pentagonal numbers on Wikiepdia\"]\n    [:hr]]\n   [:div.row\n    [:label \n     \n     \"Enter value to check\"]]\n   [:div.row\n    [:input.form-control.is-prime-value-textbox\n     {:on-change (fn [e]\n                   (rf/dispatch-sync [:set-is-pentagonal-value (-> e .-target .-value)])\n                   (rf/dispatch-sync [:check-is-pentagonal]))\n      :value @(rf/subscribe [:math/is-pentagonal-value])\n      :type \"number\"}]]\n   [:div\n    [:span.badge\n     {:style {:padding 10 :margin-right 10 :margin-top 10}\n      :class (if is-pentagonal?\n                :bg-success\n                :bg-danger)}\n     \"Pentagonal?\"]\n    [:span.badge\n     {:style {:padding 10}\n      :class (if is-generalised-pentagonal?\n               :bg-success\n               :bg-danger)}\n     \"Generalised Pentagonal?\"]]]))\n\n(defn stat-analysis []\n  (let [stats @(rf/subscribe [:math/stats])]\n    [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n     [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n      [:h1.h2 \"Statistical Analysis\"]]\n     [:div.row\n      [:label\n       \"Enter values (separated by spaces)\"]]\n     [:div.row\n      [:input.form-control.is-prime-value-textbox\n       {:on-change (fn [e]\n                     (rf/dispatch-sync [:set-stats-values (-> e .-target .-value)])\n                     (rf/dispatch-sync [:calculate-stats]))\n        :value @(rf/subscribe [:math/stats-values])\n        :type \"text\"}]]\n     [:div.row\n      {:style {:margin-top 20}}\n      (when (not (nil? stats))\n        [:table.table.table-striped\n         {:style {:width 350}}\n         [:tbody\n          [:tr\n           [:td \"Average\"]\n           [:td.amount-col (:average stats)]]\n          [:tr\n           [:td \"Median\"]\n           [:td.amount-col (:median stats)]]\n          [:tr\n           [:td \"Mode\"]\n           [:td.amount-col (str/join \",\" (:mode stats))]]\n          [:tr\n           [:td \"Standard Deviation\"]\n           [:td.amount-col (:std-deviation stats)]]\n          [:tr\n           [:td \"Range\"]\n           [:td.amount-col (:range stats)]]\n          [:tr\n           [:td \"Count of values\"]\n           [:td.amount-col (:count stats)]]\n          [:tr\n           [:td \"Sum\"]\n           [:td.amount-col (:sum stats)]]\n          [:tr\n           [:td \"Product\"]\n           [:td.amount-col (:product stats)]]\n          [:tr\n           [:td \"Interquartile Range\"]\n           [:td.amount-col (:iqr stats)]]\n          [:tr\n           [:td \"Counts within percentiles\"]\n           ]\n          [:tr\n           [:td \"10th Percentile\"]\n           [:td.amount-col (-> stats :percentiles :10)]]\n          [:tr\n           [:td \"25th Percentile\"]\n           [:td.amount-col (-> stats :percentiles :25)]]\n          [:tr\n           [:td \"50th Percentile\"]\n           [:td.amount-col (-> stats :percentiles :50)]]\n          [:tr\n           [:td \"75th Percentile\"]\n           [:td.amount-col (-> stats :percentiles :75)]]\n          [:tr\n           [:td \"90th Percentile\"]\n           [:td.amount-col (-> stats :percentiles :90)]]]])]]))\n"]}