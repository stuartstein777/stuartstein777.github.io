{"version":3,"sources":["exfn/total_income/view.cljs"],"mappings":"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","names":["exfn.total-income.view/missing-salary-entry","income","gross","reagent.core.atom","national-insurance","student-loan","pension","tax","cljs.core/deref","p1__17313#","p1__17314#","p1__17321#","p1__17322#","p1__17325#","exfn.month.logic/format-date","cljs.core/reset!","re-frame.core/dispatch","exfn.total-income.view/view","year","re_frame.core.subscribe","error","loading?","incomes","totals","exfn.total-income.logic/totals","missing-salary-deductions","exfn.total-income.logic/missing-salary-deductions","exfn.shared.error/error-indicator","exfn.shared.loading/loading","iter__5523__auto__","s__17356","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__17358","cljs.core/chunk-buffer","i__17357","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__17355","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","or__5045__auto__","exfn.shared.logic/format-number","s__17374","b__17376","i__17375","iter__17373","cljs.core/chunk-first"],"sourcesContent":["(ns exfn.total-income.view\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]\n            [exfn.shared.subscriptions]\n            [exfn.month.logic :as mlgc]\n            [exfn.total-income.logic :as lgc]\n            [exfn.total-income.subscriptions]\n            [exfn.shared.logic :as slgc]\n            [exfn.shared.error :as err]\n            [exfn.shared.loading :as loading]))\n\n(defn missing-salary-entry [income]\n  (let [gross (r/atom nil)\n        national-insurance (r/atom nil)\n        student-loan (r/atom nil)\n        pension (r/atom nil)\n        tax (r/atom nil)]\n    (fn [income]\n      [:tr\n       [:td (mlgc/format-date (:transaction-date income))]\n       [:td\n        [:div.input-group\n         [:input.form-control.text-end\n          {:defaultValue @gross\n           :style        {:width 80}\n           :on-change    #(reset! gross (-> % .-target .-value))\n           :type         :text}]\n         [:span.input-group-text \"\u00a3\"]]]\n       [:td\n        [:div.input-group\n         [:input.form-control.text-end\n          {:defaultValue @tax\n           :style        {:width 80}\n           :on-change    #(reset! tax (-> % .-target .-value))\n           :type         :text}]\n         [:span.input-group-text \"\u00a3\"]]]\n       [:td\n        [:div.input-group\n         [:input.form-control.text-end\n          {:defaultValue @national-insurance\n           :style        {:width 80}\n           :on-change    #(reset! national-insurance (-> % .-target .-value))\n           :type         :text}]\n         [:span.input-group-text \"\u00a3\"]]]\n       [:td\n        [:div.input-group\n         [:input.form-control.text-end\n          {:defaultValue @student-loan\n           :style {:width 80}\n           :on-change #(reset! student-loan (-> % .-target .-value))\n           :type :text}]\n         [:span.input-group-text \"\u00a3\"]]]\n       [:td\n        [:div.input-group\n         [:input.form-control.text-end\n          {:defaultValue @pension\n           :style {:width 80}\n           :on-change #(reset! pension (-> % .-target .-value))\n           :type :text}]\n         [:span.input-group-text \"\u00a3\"]]]\n       [:td\n        [:button.btn.btn-primary\n         {:on-click #(rf/dispatch [:save-missing-salary-deductions\n                                   {:transaction-id (:transaction-id income)\n                                    :gross @gross\n                                    :tax @tax\n                                    :national-insurance @national-insurance\n                                    :student-loan @student-loan\n                                    :pension @pension}])}\n         \"Save\"]]])))\n\n(defn view []\n  (let [year @(rf/subscribe [:year])\n        error @(rf/subscribe [:error])\n        loading? @(rf/subscribe [:loading?])\n        incomes @(rf/subscribe [:incomes-report])\n        totals (lgc/totals incomes)\n        missing-salary-deductions (lgc/missing-salary-deductions incomes)]\n    [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n     [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n      [:h1.h2 (str \"Total Income - \" year)]]\n     [:div\n      (cond\n        error    [err/error-indicator error :month]\n        loading? [loading/loading loading?]\n        :else\n        [:div.table-responsive\n         [:table.table.table-sm.table-hover\n          {:style {:width \"75%\"}}\n          [:thead\n           [:tr\n            {:style {:background-color \"#171819\"\n                     :color            :white}}\n            [:td \"Date\"]\n            [:td]\n            [:td.amount-col \"Gross\"]\n            [:td.amount-col \"Tax\"]\n            [:td.amount-col \"National Ins.\"]\n            [:td.amount-col \"Student Loan\"]\n            [:td.amount-col \"Pension\"]\n            [:td.amount-col \"Net\"]]]\n          [:tbody\n           (for [income incomes]\n             [:tr\n              [:td (mlgc/format-date (:transaction-date income))]\n              [:td (:category-description income)]\n              [:td.amount-col (or (slgc/format-number (:gross income))\n                                  (slgc/format-number (:amount income)))]\n              [:td.amount-col (or (slgc/format-number (:tax income)) \"-\")]\n              [:td.amount-col (or (slgc/format-number (:national-insurance income)) \"-\")]\n              [:td.amount-col (or (slgc/format-number (:student-loan income)) \"-\")]\n              [:td.amount-col (or (slgc/format-number (:pension income)) \"-\")]\n              [:td.amount-col (slgc/format-number (:amount income))]])\n           [:tr.total-row\n            [:td \"\"]\n            [:td]\n            [:td.amount-col (slgc/format-number (totals :gross))]\n            [:td.amount-col (slgc/format-number (totals :tax))]\n            [:td.amount-col (slgc/format-number (totals :national-insurance))]\n            [:td.amount-col (slgc/format-number (totals :student-loan))]\n            [:td.amount-col (slgc/format-number (totals :pension))]\n            [:td.amount-col (slgc/format-number (totals :amount))]]\n           [:tr\n            {:style {:font-weight :bolder}}\n            [:td \"Total Deductions\"]\n            [:td \"(Tax, NI, Pension, Student Loan)\"]\n            [:td.amount-col (slgc/format-number (+ (totals :tax)\n                                                   (totals :national-insurance)\n                                                   (totals :student-loan)\n                                                   (totals :pension)))]\n\n            [:td]\n            [:td]\n            [:td]\n            [:td]\n            [:td]]]]])]\n     (when (> (count missing-salary-deductions) 0)\n       [:div\n        {:style {:padding-top 30}}\n        [:h3 \"Missing Salary Deductions\"]\n        [:div.table-responsive\n         [:table.table.table-sm.table-hover\n          {:style {:width \"75%\"}}\n          [:thead\n           [:tr\n            [:td \"Date\"]\n            [:td \"Gross\"]\n            [:td \"Tax\"]\n            [:td \"National Ins.\"]\n            [:td \"Student Loan\"]\n            [:td \"Pension\"]\n            [:td]]]\n          [:tbody\n           (for [income missing-salary-deductions]\n             [missing-salary-entry income])]]]])]))"]}