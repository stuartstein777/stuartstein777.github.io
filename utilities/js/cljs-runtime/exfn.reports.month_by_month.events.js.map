{"version":3,"sources":["exfn/reports/month_by_month/events.cljs"],"mappings":";AAKA,yDAAA,zDAACA,kIAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;aAAT,AAAAF,4CAAAD,WAAA,IAAA,pEAAWI;AAAX,sHACMF,9CACA,iDAAA,6DAAA,9GAACG,nBACD,wIAAA,mFAAA,8EAAA,zSAACC,wXAA6CF,7aAC9C,qbAAA,uDAAA,reAACC;;AAER,iDAAA,jDAAME,0GAAaC;AAAnB,AAAA,kDAAA,uDAAA,mDAAA,4JAAA,0FAAA,iOAAA,iEAAA,mFAAA,iFAAA,gEAAA,mFAAA,5xBAEoB,iCAAA,hCAAKC,wFAA8BD,0EACnC,AAACE,2GACD,+BAAA,2CAAA,8DAAA,xIAACC","names":["re_frame.core.reg_event_db","p__17216","vec__17217","cljs.core.nth","db","_","report","cljs.core.assoc","cljs.core/assoc-in","exfn.reports.month-by-month.events/monthly-api","year","exfn.shared.logic/base-and-port","ajax.core/json-request-format","ajax.core/json-response-format"],"sourcesContent":["(ns exfn.reports.month-by-month.events\n  (:require [ajax.core :as ajax]\n            [exfn.shared.logic :as lgc]\n            [re-frame.core :as rf]))\n\n(rf/reg-event-db\n :process-report\n (fn [db [_ report]]\n   (-> db\n       (assoc :loading? false)\n       (assoc-in [:monthly-summaries :annual-report] report)\n       (assoc :error nil))))\n\n(defn monthly-api [year]\n  {:method          :get\n   :uri             (str lgc/base-and-port \"/Reports/\" year)\n   :format          (ajax/json-request-format)\n   :response-format (ajax/json-response-format {:keywords? true})\n   :on-success      [:process-report]\n   :on-failure      [:fail]})"]}