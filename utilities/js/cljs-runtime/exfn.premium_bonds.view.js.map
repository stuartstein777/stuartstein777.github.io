{"version":3,"sources":["exfn/premium_bonds/view.cljs"],"mappings":";AAUA,+BAAA,/BAAMA;AAAN,AACE,YAAA,AAAAC,RAAMC,wBAAW,sDAAA,mFAAA,zIAACC;qBAAlB,AAAAF,jBACMG,iCAAW,sDAAA,mFAAA,zIAACD;oBADlB,AAAAF,hBAEMI,gCAAe,sDAAA,mFAAA,zIAACF;IAChBG,8BAA4B,AAACC,sCAAmBF;AAHtD,AAAA,0FAAA,gIAAA,mFAAA,8OAAA,mFAAA,uDAAA,gCAOG,yBAAA,2HAAA,qEAAA,kCAAA,sIAAA,AAAA,mFAAA,0DAAA,mFAAA,6EAAA,2CAAA,uDAAA,2CAAA,uDAAA,sBAAA,mFAAA,oFAAA,mFAAA,yIAAA,mFAAA,uDAAA,mFAAA,kDAAA,mFAAA,iDAAA,eAAA,mFAAA,iDAAA,WAAA,mFAAA,sEAAA,iBAAA,mFAAA,8EAAA,mFAAA,sEAAA,kCAAA,mFAAA,n4EACEH,0FAAOM,kCAAoBN,6FAC3BE,mGAAUK,4BAAgBL,imEAerB,iBAAAM,qBAAA,qDAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAy6EuC,AAAA0B,sBAAA/B;IAz6EvCM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,IAAAK,aAAA,AAAAC,eAAAP,gBAAAK;IAAAC,iBAAA,AAAAE,4BAAAF;WAAA,AAAAG,4CAAAH,eAAA,lEAAca;aAAd,AAAAV,4CAAAH,eAAA,pEAAmBc;gBAAnB,AAAAX,4CAAAH,eAAA,vEAA0Be;cAA1B,AAAAZ,4CAAAH,eAAA,rEAAoCgB;AAApC,AAAA,AAAA,AAAAZ,uBAAAP,SAAA,mFAAA,kDAAA,mFAAA,8DAAA,mFAAA,mEAAA,mFAAA,wHAAA,mFAAA,yTAAA,mFAAA,70BAGQgB,iJACAE,6KACW,AAACE,gCAA2BH,2KAE3C,mEAAA,mFAAA,+EAAA,nOAAI,uDAAA,vDAACI,6CAAEH,6VAGQ,AAACE,gCAA2BD;;AAV/C,eAAA,CAAAjB,WAAA;;;;AAAA;;;;;AAAA,OAAAM,qBAAA,AAAAC,gBAAAT,UAAA,AAAAU,2CAAA,AAAAC,qBAAAnB;;AAAA,OAAAgB,qBAAA,AAAAC,gBAAAT,UAAA;;;AAAA,IAAAY,aAAA,AAAAC,gBAAArB;IAAAoB,iBAAA,AAAAP,4BAAAO;WAAA,AAAAN,4CAAAM,eAAA,lEAAcI;aAAd,AAAAV,4CAAAM,eAAA,pEAAmBK;gBAAnB,AAAAX,4CAAAM,eAAA,vEAA0BM;cAA1B,AAAAZ,4CAAAM,eAAA,rEAAoCO;AAApC,AAAA,OAAAL,eAAA,mFAAA,kDAAA,mFAAA,8DAAA,mFAAA,mEAAA,mFAAA,wHAAA,mFAAA,yTAAA,mFAAA,iIAAA,AAAAJ,2CAAA,AAAAK,eAAAvB,xgCAGQwB,iJACAE,6KACW,AAACE,gCAA2BH,2KAE3C,mEAAA,mFAAA,+EAAA,nOAAI,uDAAA,vDAACI,6CAAEH,6VAGQ,AAACE,gCAA2BD;;;AAV/C;;;;GAAA,KAAA;;AAAA,AAAA,OAAA5B,mBACMJ;qCAlBb,mFAAA,qFAAA,mFAAA,6EAAA,mFAAA,mDAAA,mFAAA,iDAAA,uBAAA,mFAAA,iDAgCU,gCAAA,0CAAID,1CACAoC,hCACAF","names":["exfn.premium-bonds.view/view","cljs.core/deref","error","re_frame.core.subscribe","loading?","premium-bonds","premium-bonds-with-balances","exfn.premium-bonds.logic/get-balances","exfn.shared.error/error-indicator","exfn.shared.loading/loading","iter__5523__auto__","s__17400","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__17402","cljs.core/chunk-buffer","i__17401","map__17403","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__17399","cljs.core/chunk-rest","map__17406","cljs.core/first","cljs.core/cons","cljs.core/rest","date","amount","narrative","balance","exfn.shared.logic/format-number","cljs.core._EQ_","exfn.premium-bonds.logic/get-total-prizes","cljs.core/chunk-first"],"sourcesContent":["(ns exfn.premium-bonds.view\n  (:require [exfn.shared.loading :as loading]\n            [exfn.shared.error :as err]\n            [exfn.premium-bonds.logic :as logic]\n            [exfn.shared.logic :as shared-logic]\n            [exfn.premium-bonds.subscriptions]\n            [goog.string :as gstring]\n            [goog.string.format]\n            [re-frame.core :as rf]))\n\n(defn view []\n  (let [error     @(rf/subscribe [:error])\n        loading?  @(rf/subscribe [:loading?])\n        premium-bonds @(rf/subscribe [:premium-bonds])\n        premium-bonds-with-balances (logic/get-balances premium-bonds)]\n    [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n     [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n      [:h1.h2 \"Premium Bonds\"]]\n     (cond\n       error [err/error-indicator error :purchase]\n       loading? [loading/loading loading?]\n       :else\n       [:div.row\n        [:div.col.col-lg-6\n         {:style {:width 500}}\n         [:div.table-responsive\n          [:table.table.table-striped.table-sm.table-hover\n           [:thead\n            [:tr\n             [:th \"Date\"]\n             [:th \"\"]\n             [:th.amount-col \"Amount\"]\n             [:th.center-col]\n             [:th.amount-col \"Balance\"]]]\n           [:tbody\n            (for [{:keys [date amount narrative balance]}\n                  premium-bonds-with-balances]\n              [:tr\n               [:td date]\n               [:td narrative]\n               [:td.amount-col (shared-logic/format-number amount)]\n               [:td.center-col\n                (if (= narrative \"Prize\")\n                  [:i.far.fa-star]\n                  \"\")]\n               [:td.amount-col (shared-logic/format-number balance)]])]]]]\n        [:div.col.col-lg-2]\n        [:div.col.col-lg-4\n         [:div\n          [:h3 \"Total Prizes\"]\n          [:h2 (-> premium-bonds\n                   logic/get-total-prizes\n                   shared-logic/format-number)]]]])]))\n"]}