{"version":3,"sources":["exfn/shared/logic.cljs"],"mappings":";AAOA,yBAAA,zBAAKA;AAEL,4BAAA,wCAAA,cAAA,qBAAA,SAAA,WAAA,eAAA,uBAAA,iBAAA,kBAAA,cAAA,gBAAA,kBAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,tSAAKC;AAaL,6BAAA,wCAAA,oBAAA,WAAA,QAAA,yBAAA,QAAA,WAAA,mBAAA,UAAA,qBAAA,YAAA,UAAA,2BAAA,cAAA,eAAA,OAAA,aAAA,oBAAA,uBAAA,wBAAA,aAAA,UAAA,YAAA,eAAA,YAAA,WAAA,6BAAA,KAAA,IAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,IAAA,KAAA,xkBAAKC;AA4BL,AAAKC,mCACH,AAACC,uGAAMH,0BAAQC;AAEjB,kCAAA,lCAAMG,4EAAeC;AAArB,AACE,oBAAMA;AAAN,AACE,IAAMC,YAAU,KAAAC,kBAAA,QAAA,WAAA,oCAAA,8BAAA;AAAhB,AAIE,OAASD,iBAAUD;;AALvB;;;AAOF,AAAKG,kCAAc,CAAA,gEAAyBT","names":["exfn.shared.logic/port","exfn.shared.logic/incomes","exfn.shared.logic/expenses","exfn.shared.logic/all-categories","cljs.core.merge","exfn.shared.logic/format-number","number","formatter","js/Intl.NumberFormat","exfn.shared.logic/base-and-port"],"sourcesContent":["(ns exfn.shared.logic\n  (:require [clojure.set :as set]\n            [cljs-time.core :refer [date-time]]\n            [cljs-time.format :refer [unparse formatter parse parse-local]]))\n\n; debug port is 7145\n; release port is 7229\n(def port 7145) \n\n(def incomes\n  {\"Salary\" 14\n   \"Interest\" 15\n   \"Parking space rental\" 16\n   \"Premium Bond Prize\" 17\n   \"Work Expenses\" 18\n   \"Poker Winnings\" 19\n   \"Selling Items\" 20\n   \"Transfer In\" 21\n   \"From Parents\" 33\n   \"Share Dividends\" 36\n   \"Misc Income\" 37})\n\n(def expenses\n  {\"Night Out / Beers\" 0\n   \"Mortgage\" 1\n   \"Council Tax\" 2\n   \"Utilities\" 3\n   \"Groceries\" 4\n   \"Transport\" 5\n   \"Misc\" 6\n   \"Factors\" 7\n   \"TV and Entertainment\" 8\n   \"Digital Subscriptions\" 9\n   \"Clothing\" 10\n   \"Haircut\" 12\n   \"Study and Courses\" 13\n   \"Tax Refund\" 22\n   \"Government Energy Credit\" 23\n   \"Internet and Telephone\" 24\n   \"Transfer to ETorro\" 25\n   \"Transfer Out\" 29\n   \"Eating Out\" 26\n   \"Hotel\" 27\n   \"Holiday\" 28\n   \"Student Loan Overpayment\" 30\n   \"Books and Comics\" 31\n   \"Photo Prints\" 32\n   \"Music\" 34\n   \"Concerts\" 35})\n\n(def all-categories\n  (merge incomes expenses))\n\n(defn format-number [number]\n  (when number\n    (let [formatter (js/Intl.NumberFormat. \"en-US\"\n                                           #js{:style \"decimal\"\n                                               :minimumFractionDigits 2\n                                               :maximumFractionDigits 2})]\n      (.format formatter number))))\n\n(def base-and-port (str \"http://localhost:\" port))"]}