{"version":3,"sources":["exfn/app.cljs"],"mappings":";AAkBA,eAAA,fAAMA;AAAN,AACE,mBAAA,AAAAC,fAAMC,+BAAc,sDAAA,mFAAA,zIAACC;wBAArB,AAAAF,pBACMG,oCAAmB,sDAAA,mFAAA,zIAACD;IACpBE,kBAAgB,iBAAAC,cAAOE;IAAPD,cAASL;AAAT,AAAA,oBAAA,CAAAI,4CAAAA,0CAAA,6DAAAC,eAAAD,sBAAA,6DAAAC;AACiBE;;AADjB,oBAAA,CAAAH,4CAAAA,0CAAA,4DAAAC,eAAAD,sBAAA,4DAAAC;AAEiBG;;AAFjB,oBAAA,CAAAJ,4CAAAA,0CAAA,gEAAAC,eAAAD,sBAAA,gEAAAC;AAGcI;;AAHd,oBAAA,CAAAL,4CAAAA,0CAAA,+DAAAC,eAAAD,sBAAA,+DAAAC;AAIcK;;AAJd,oBAAA,CAAAN,4CAAAA,0CAAA,qDAAAC,eAAAD,sBAAA,qDAAAC;AAKcM;;AALd,oBAAA,CAAAP,4CAAAA,0CAAA,mEAAAC,eAAAD,sBAAA,mEAAAC;AAMeO;;AACbC;;;;;;;;AATxB,AAAA,0FAAA,mDAAA,mFAAA,wLAAA,mFAAA,2IAAA,oBAAA,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,wDAAA,uEAAA,mFAAA,sKAAA,2CAAA,qDAAA,2DAAA,mFAAA,iJAAA,mFAAA,gFAAA,mFAAA,0DAAA,mFAAA,kKAAA,2CAAA,kDAAA,sBAAA,mFAAA,0HAAA,mFAAA,kFAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA;AAAA,AA2BsB,mCAAA,mFAAA,/GAACC;GA3BvB,uDAAA,2CAAA,yDAAA,yEAAA,mFAAA,0FAAA,mFAAA,gJAAA,gBAAA,mFAAA,kDAAA,2CAAA,uDAAA,2CAAA,2NAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA,njBAiC4B,qCAAA,sDAAA,zEAAIZ;AAjChC,AAsCwB,mCAAA,mFAAA,8EAAA,7LAACY;GAtCzB,uDAAA,2CAAA,yDAAA,yEAAA,sBAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA;AAAA,AA2CwB,mCAAA,mFAAA,8EAAA,7LAACA;GA3CzB,uDAAA,2CAAA,yDAAA,yEAAA,sCAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA;AAAA,AAgDsB,mCAAA,mFAAA,8EAAA,7LAACA;GAhDvB,uDAAA,2CAAA,yDAAA,yEAAA,mFAAA,0FAAA,mFAAA,qIAAA,6BAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA;AAAA,AAuDsB,mCAAA,mFAAA,8EAAA,7LAACA;GAvDvB,uDAAA,2CAAA,yDAAA,yEAAA,mFAAA,0FAAA,mFAAA,0HAAA,4BAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA;AAAA,AA8DsB,mCAAA,mFAAA,8EAAA,7LAACA;GA9DvB,uDAAA,2CAAA,yDAAA,yEAAA,mFAAA,0FAAA,mFAAA,mHAAA,uBAAA,mFAAA,kEAAA,mFAAA,kEAAA,2CAAA,6DAAA;AAAA,AAqEsB,mCAAA,mFAAA,8EAAA,7LAACA;GArEvB,uDAAA,2CAAA,yDAAA,yEAAA,mFAAA,0FAAA,mFAAA,8HAAA,8DAAA,mFA0EKX;;AAKP,iBAAA,jBAAuBY;AAAvB,AAEE,AAACC;;AACD,wDAAA,jDAACC,oIAAYnB,qBACD,wBAAA,xBAAiBoB;;AAE/B,gBAAA,hBAAeC;AAAf,AACE,OAACJ;;;AAGH,GAAA,QAAAK,iCAAAC,qCAAAC;AAAA;AAAA,AAAA,AAASC,sBAAW,4BAAA,mFAAA,/GAACT","names":["exfn.app/app","cljs.core/deref","current-page","re_frame.core.subscribe","is-maths-expanded","current-page-fn","pred__15297","expr__15298","cljs.core/=","exfn.maths.views/gcd","exfn.maths.views/lcm","exfn.converters.view/view","exfn.utilities.view/view","exfn.time.view/view","exfn.ascii.view/view","exfn.home.view/view","re-frame.core/dispatch-sync","exfn.app/start","re-frame.core/clear-subscription-cache!","reagent.dom.render","js/document","exfn.app/init","js/exfn","js/exfn.app","js/exfn.app.initialize","exfn.app/initialize"],"sourcesContent":["(ns exfn.app\n  (:require [reagent.dom :as dom]\n            [reagent.core :as r]\n            [re-frame.core :as rf]\n            [exfn.subscriptions]\n            [exfn.maths.views :as vw-maths]\n            [exfn.converters.view :as vw-converters]\n            [exfn.time.view :as vw-time]\n            [exfn.utilities.view :as vw-utils]\n            [exfn.ascii.view :as vw-ascii]\n            [exfn.home.view :as vw-home]\n            [clojure.string :as str]\n            [exfn.events]\n            [exfn.logic :as lgc]\n            [goog.string.format]\n            [exfn.utilities.view :as vw-utilities]))\n\n;; -- App -------------------------------------------------------------------------\n(defn app [] \n  (let [current-page @(rf/subscribe [:current-page])\n        is-maths-expanded @(rf/subscribe [:is-math-expanded])\n        current-page-fn (condp = current-page\n                          :math-gcd      vw-maths/gcd\n                          :math-lcm      vw-maths/lcm\n                          :converters vw-converters/view\n                          :utilities  vw-utilities/view\n                          :time       vw-time/view\n                          :ascii-table vw-ascii/view\n                          vw-home/view)]\n    [:div\n     [:header.navbar.navbar-dark.sticky-top.bg-dark.flex-md-nowrap.p-0.shadow\n      [:a.navbar-brand.col-md-3.col-lg-2.me-0.px-3.fs-6\n       \"Utilities\"]\n      [:div\n       {:style {:float :right}}\n       [:a.navbar-brand.col-md-1.col-lg-1.me-0.px-3.fs-6.current-year\n        {:href \"https://github.com/stuartstein777/cljs-utilities\"}\n        [:i.fa-brands.fa-github.settings-cog]]]]\n     [:div.container-fluid\n      [:div.row\n       [:nav.col-md-3.col-lg-2.d-md-block.bg-light.sidebar.collapse\n        {:id \"sidebarMenu\"}\n        [:div.position-sticky.pt-3.sidebar-sticky\n         [:ul.nav.flex-column\n          [:li.nav-item\n           [:a.nav-link\n            {:on-click #(rf/dispatch-sync [:toggle-is-math-expanded])\n             :style    {:cursor :pointer}}\n            [:span.align-text-bottom\n             [:i.fas.fa-square-root-variable.sidebar-icon]]\n            \"Maths\"]\n           [:ul\n            {:style {:display (if is-maths-expanded\n                                :block\n                                :none)}}\n            [:li.nav-item\n             [:a.nav-link\n              {:on-click #(rf/dispatch-sync [:set-current-page :math-gcd])\n               :style    {:cursor :pointer}}\n              \"GCD\"]]\n            [:li.nav-item\n             [:a.nav-link\n              {:on-click #(rf/dispatch-sync [:set-current-page :math-lcm])\n               :style    {:cursor :pointer}}\n              \"LCM\"]]]]\n          [:li.nav-item\n           [:a.nav-link\n            {:on-click #(rf/dispatch-sync [:set-current-page :converters])\n             :style    {:cursor :pointer}}\n            [:span.align-text-bottom\n             [:i.fas.fa-scale-balanced.sidebar-icon]]\n            \"Converters\"]]\n          [:li.nav-item\n           [:a.nav-link\n            {:on-click #(rf/dispatch-sync [:set-current-page :utilities])\n             :style    {:cursor :pointer}}\n            [:span.align-text-bottom\n             [:i.far.fa-keyboard.sidebar-icon]]\n            \"Utilities\"]]\n          [:li.nav-item\n           [:a.nav-link\n            {:on-click #(rf/dispatch-sync [:set-current-page :time])\n             :style    {:cursor :pointer}}\n            [:span.align-text-bottom\n             [:i.far.fa-clock.sidebar-icon]]\n            \"Time\"]]\n            [:li.nav-item\n           [:a.nav-link\n            {:on-click #(rf/dispatch-sync [:set-current-page :ascii-table])\n             :style    {:cursor :pointer}}\n            [:span.align-text-bottom\n             [:i.fas.fa-table-cells.sidebar-icon]]\n            \"ASCII table\"]]]]]]\n      [current-page-fn]]]))\n\n;; -- After-Load --------------------------------------------------------------------\n;; Do this after the page has loaded.\n;; Initialize the initial db state.\n(defn ^:dev/after-load start\n  []\n  (rf/clear-subscription-cache!)\n  (dom/render [app]\n              (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  (start))\n\n; dispatch the event which will create the initial state. \n(defonce initialize (rf/dispatch-sync [:initialize]))\n"]}