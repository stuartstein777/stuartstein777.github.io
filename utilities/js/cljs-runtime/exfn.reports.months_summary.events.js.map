{"version":3,"sources":["exfn/reports/months_summary/events.cljs"],"mappings":";AAKA,yDAAA,zDAACA,oHAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;cAAT,AAAAF,4CAAAD,WAAA,IAAA,rEAAWI;AAAX,sHACMF,9CACA,iDAAA,6DAAA,9GAACG,nBACD,wIAAA,mFAAA,wEAAA,nSAACC,+VAAiCF,pZAClC,6ZAAA,uDAAA,7cAACC;;AAER,yCAAA,zCAAME,0FAAKC;AAAX,AAAA,kDAAA,uDAAA,mDAAA,2JAAA,0FAAA,iOAAA,iEAAA,mFAAA,mEAAA,gEAAA,mFAAA,7wBAEoB,iCAAA,hCAAKC,uFAA6BD,0EAClC,AAACE,2GACD,+BAAA,2CAAA,8DAAA,xIAACC","names":["re_frame.core.reg_event_db","p__17212","vec__17213","cljs.core.nth","db","_","summary","cljs.core.assoc","cljs.core/assoc-in","exfn.reports.months-summary.events/api","year","exfn.shared.logic/base-and-port","ajax.core/json-request-format","ajax.core/json-response-format"],"sourcesContent":["(ns exfn.reports.months-summary.events\n  (:require [exfn.shared.logic :as lgc]\n            [re-frame.core :as rf]\n            [ajax.core :as ajax]))\n\n(rf/reg-event-db\n :process\n (fn [db [_ summary]]\n   (-> db\n       (assoc :loading? false)\n       (assoc-in [:months-summary :grid] summary)\n       (assoc :error nil))))\n\n(defn api [year]\n  {:method          :get\n   :uri             (str lgc/base-and-port \"/months/\" year)\n   :format          (ajax/json-request-format)\n   :response-format (ajax/json-response-format {:keywords? true})\n   :on-success      [:process]\n   :on-failure      [:fail]})"]}