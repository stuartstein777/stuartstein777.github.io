{"version":3,"sources":["exfn/accounts/view.cljs"],"mappings":"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","names":["exfn.accounts.view/account-row","account","cljs.core/deref","account-types","re_frame.core.subscribe","selected-account-name","reagent.core.atom","selected-opening-balance","selected-account-type","is-archived?","archived-date","build-acc","p1__16995#","p1__16996#","p1__16997#","p1__16998#","cljs.core/reset!","iter__5523__auto__","s__17000","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__17002","cljs.core/chunk-buffer","i__17001","map__17003","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__16999","cljs.core/chunk-rest","map__17004","cljs.core/first","cljs.core/cons","cljs.core/rest","account-type-id","description","cljs.core._EQ_","cljs.core/not","exfn.month.logic/format-date","re-frame.core/dispatch","exfn.accounts.view/add-account","build-account","p1__17005#","p1__17006#","p1__17007#","s__17009","b__17011","i__17010","map__17012","iter__17008","map__17013","re-frame.core/dispatch-sync","exfn.accounts.view/view","loading?","error","accounts","exfn.shared.loading/loading","exfn.shared.error/error-indicator","s__17015","b__17017","i__17016","iter__17014","cljs.core/chunk-first"],"sourcesContent":["(ns exfn.accounts.view\n  (:require [exfn.shared.error :as err]\n            [exfn.month.logic :as lgc]\n            [re-frame.core :as rf]\n            [reagent.core :as r]\n            [exfn.accounts.subscriptions]\n            [exfn.shared.loading :as loading]\n            [goog.string.format]))\n\n(defn account-row [account]\n  (let [account-types @(rf/subscribe [:account-types])\n        selected-account-name (r/atom (account :account-name))\n        selected-opening-balance (r/atom (account :opening-balance))\n        selected-account-type (r/atom (account :account-type-id))\n        is-archived? (r/atom (account :is-archived))\n        archived-date (r/atom (account :archived-date))\n        build-acc (fn []\n                    {:account-name @selected-account-name\n                     :opening-balance @selected-opening-balance\n                     :is-archived @is-archived?\n                     :archived-date (if @is-archived? @archived-date nil)\n                     :account-id (account :account-id)})]\n    (fn [account]\n      [:tr {:key (account :account-id)}\n       [:td\n        [:input.form-control\n         {:type :text\n          :style {:width 180}\n          :defaultValue @selected-account-name\n          :on-change #(reset! selected-account-name (-> % .-target .-value))}]]\n       [:td.amount-col\n        [:div.input-group\n         [:input.form-control.text-end\n          {:defaultValue @selected-opening-balance\n           :style {:width 80}\n           :on-change #(reset! selected-opening-balance (-> % .-target .-value))\n           :type :text}]\n         [:span.input-group-text \"\u00a3\"]]]\n       [:td.amount-col\n        [:select.custom-select\n         {:on-change #(reset! selected-account-type (int (-> % .-target .-value)))}\n         (for [{:keys [account-type-id description]} account-types]\n           [:option {:value account-type-id\n                     :key (str \"cat-\" description)\n                     :selected (= account-type-id @selected-account-type)}\n            description])]]\n       [:td.amount-col\n        [:input.form-check-input\n         {:type :checkbox\n          :checked @is-archived?\n          :on-change (fn []\n                       (reset! is-archived? (not @is-archived?)))}]]\n       [:td.amount-col\n        [:input.form-control\n         {:type :text\n          :style {:width 150}\n          :defaultValue (lgc/format-date @archived-date)\n          :on-change #(reset! archived-date (-> % .-target .-value))}]]\n       [:td.amount-col\n        [:button.btn.btn-primary.btn-sm\n         {:on-click #(rf/dispatch [:update-account (build-acc)])}\n         \"Save\"]]])))\n\n(defn add-account []\n  (let [selected-account-name (r/atom nil)\n        selected-opening-balance (r/atom 0)\n        selected-account-type (r/atom 1)\n        account-types @(rf/subscribe [:account-types])\n        build-account (fn []\n                        {:account-name @selected-account-name\n                         :opening-balance @selected-opening-balance\n                         :account-type-id @selected-account-type})]\n    (fn []\n      [:tbody\n       [:tr\n        [:td \"Account Name\"]\n        [:td.amount-col [:input.form-control\n              {:type :text\n               :defaultValue @selected-account-name\n               :on-change #(reset! selected-account-name (-> % .-target .-value))}]]]\n       [:tr\n        [:td \"Opening Balance\"]\n        [:td.amount-col\n         [:div.input-group\n          [:span.input-group-text \"\u00a3\"]\n          [:input.form-control.text-end\n           {:defaultValue @selected-opening-balance\n            :style {:width 80}\n            :on-change #(reset! selected-opening-balance (-> % .-target .-value))\n            :type :text}]]]]\n       [:tr\n        [:td \"Account Type\"]\n        [:td.amount-col\n         [:select.custom-select\n          {:on-change #(reset! selected-account-type (int (-> % .-target .-value)))}\n          (for [{:keys [account-type-id description]} account-types]\n            [:option {:value account-type-id\n                      :key (str \"cat-\" description)\n                      :selected (= account-type-id @selected-account-type)}\n             description])]]]\n       [:tr\n        [:td]\n        [:td.amount-col\n         [:button.btn.btn-primary \n          {:on-click #(rf/dispatch-sync [:add-account (build-account)])}\n          \"Save\"]]]])))\n\n(defn view []\n  (let [loading?      @(rf/subscribe [:loading?])\n        error         @(rf/subscribe [:error])\n        accounts      @(rf/subscribe [:account-summaries])]\n    [:main.col-md-9.ms-sm-auto.col-lg-10.px-md-4\n     [:div.d-flex.justify-content-between.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom\n      [:h1.h2 \"Accounts\"]]\n     [:div\n      (cond\n        loading? [loading/loading loading?]\n        error [err/error-indicator error :accounts]\n        :else (when (and (not loading?) (not error))\n                [:div\n                 [:table.table.table-sm.table-hover\n                  {:style {:width 1000}}\n                  [:thead\n                   [:tr\n                    [:th\n                     {:style {:width 200}}\n                     \"Account Name\"]\n                    [:th.amount-col\n                     {:style {:width 180}}\n                     \"Opening Balance\"]\n                    [:th.amount-col\n                     {:style {:width 200}}\n                     \"Account Type\"]\n                    [:th.amount-col\n                     {:style {:width 100}}\n                     \"Archived?\"]\n                    [:th\n                     {:style {:width      100\n                              :text-align :center}}\n                     \"Archived Date\"]\n                    [:th.amount-col \"\"]]]\n                  [:tbody\n                   (for [account accounts]\n                     [account-row account])]\n                  [:tr\n                   [:h2 \n                    {:style {:margin-top 30}}\n                    \"Add Account\"]]]\n                 [:table.table.table-sm.table-hover\n                  {:style {:width 350}}\n                  [add-account]]]))]]))\n\n(comment\n  \n  )"]}