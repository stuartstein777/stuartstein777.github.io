{"version":3,"sources":["exfn/investing/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__17206","p__17207","map__17208","cljs.core/--destructure-map","cljs.core.get","vec__17209","cljs.core.nth","db","_","investments","cljs.core.assoc","cljs.core/assoc-in","exfn.investing.events/investments-api","exfn.shared.logic/base-and-port","ajax.core/json-request-format","ajax.core/json-response-format","re_frame.core.reg_event_db","p__17232","vec__17233","vec__17236","id","price","selected-investment","cljs.core/first","p1__17227#","cljs.core.filter","cljs.core._EQ_","js/Date","p__17259","vec__17260","p__17263","vec__17264","date","p__17287","vec__17288","p__17291","vec__17292","ticker","p__17295","vec__17296","units","p__17299","vec__17300","p__17303","vec__17304","type","p__17307","map__17312","p__17315","p__17316","map__17317","vec__17318","investment-details","p__17323","p__17324","map__17326","vec__17327"],"sourcesContent":["(ns exfn.investing.events\n  (:require [re-frame.core :as rf]\n            [ajax.core :as ajax]\n            [exfn.shared.logic :as lgc]))\n\n\n(rf/reg-event-fx\n :process-investments\n (fn [{:keys [db]} [_ investments]]\n   \n   {:db (-> db\n            (assoc :loading? false)\n            (assoc-in [:investments :ui :displaying] :investments)\n            (assoc-in [:investments :grid] investments)\n            (assoc :error nil))}))\n\n(def investments-api\n  {:method          :get\n   :uri             (str lgc/base-and-port \"/investment/\")\n   :format          (ajax/json-request-format)\n   :response-format (ajax/json-response-format {:keywords? true})\n   :on-success      [:process-investments]\n   :on-failure      [:fail]})\n\n(rf/reg-event-db\n :show-close-investment\n (fn [db [_ [id price]]]\n   (let [investments (-> db :investments :grid)\n         selected-investment (first (filter #(= id (:id %)) investments))]\n     (-> db\n         (assoc-in [:investments :ui :displaying] :closing-investment)\n         (assoc-in [:investments :ui :selected-investment] selected-investment)\n         (assoc-in [:investments :ui :closing :sell-price] price)))))\n\n(rf/reg-event-db\n :show-open-investment\n (fn [db _]\n   (-> db\n       (assoc-in [:investments :ui :displaying] :opening-investment)\n       (assoc-in [:investments :ui :opening :date] (js/Date.)))))\n\n(rf/reg-event-db\n :cancel-close-investment\n (fn [db _]\n   (-> db\n       (assoc-in [:investments :ui :displaying] :investments)\n       (assoc-in [:investments :ui :selected-investment] nil)\n       (assoc-in [:investments :ui :closing :sell-price] 0))))\n\n(rf/reg-event-db\n :cancel-open-investment\n (fn [db _]\n   (-> db\n       (assoc-in [:investments :ui :displaying] :investments)\n       (assoc-in [:investments :ui :opening :ticker] \"\")\n       (assoc-in [:investments :ui :opening :price] nil)\n       (assoc-in [:investments :ui :opening :units] nil)\n       (assoc-in [:investments :ui :opening :date] (js/Date.)))))\n\n(rf/reg-event-db\n :investments-ui-sell-price\n (fn [db [_ price]]\n   (-> db\n       (assoc-in [:investments :ui :closing :sell-price] price))))\n\n(rf/reg-event-db\n :investments-ui-closing-date\n (fn [db [_ date]]\n      (-> db\n       (assoc-in [:investments :ui :closing :closing-date] date))))\n\n\n;; opening UI change events\n\n(rf/reg-event-db\n :investments/opening-date\n (fn [db [_ date]]\n   (assoc-in db [:investments :ui :opening :date] date)))\n\n(rf/reg-event-db\n :investments/opening-ticker\n (fn [db [_ ticker]]\n   (-> db\n       (assoc-in [:investments :ui :opening :ticker] ticker))))\n\n(rf/reg-event-db\n :investments/opening-units\n (fn [db [_ units]]\n   (-> db\n       (assoc-in [:investments :ui :opening :units] units))))\n\n(rf/reg-event-db\n :investments/opening-price\n (fn [db [_ price]]\n   (-> db\n       (assoc-in [:investments :ui :opening :price] price))))\n\n(rf/reg-event-db\n :investments/type\n (fn [db [_ type]]\n   (-> db\n       (assoc-in [:investments :ui :opening :type] type))))\n\n(rf/reg-event-fx\n :reload\n (fn [{:keys [db]} _]\n   {:db (-> db\n            (assoc :loading? true)\n            (assoc :error nil)\n            (assoc-in [:investments :ui :displaying] :investments)\n            (assoc-in [:investments :ui :selected-investment] nil)\n            (assoc-in [:investments :ui :closing :sell-price] 0))\n    :x-http-xhrio investments-api}))\n \n(rf/reg-event-fx\n :close-investment\n (fn [{:keys [db]} [_ investment-details]]\n   {:db db\n    :x-http-xhrio {:method          :post\n                   :uri             (str lgc/base-and-port \"/investment/close\")\n                   :format          (ajax/json-request-format)\n                   :params          investment-details\n                   :response-format (ajax/json-response-format {:keywords? true})\n                   :on-success      [:reload]\n                   :on-failure      [:fail]}}))\n\n(rf/reg-event-fx\n :open-investment\n (fn [{:keys [db]} [_ investment-details]]\n   {:db db\n    :x-http-xhrio {:method          :post\n                   :uri             (str lgc/base-and-port \"/investment/open\")\n                   :format          (ajax/json-request-format)\n                   :params          investment-details\n                   :response-format (ajax/json-response-format {:keywords? true})\n                   :on-success      [:reload]\n                   :on-failure      [:fail]}}))\n"]}