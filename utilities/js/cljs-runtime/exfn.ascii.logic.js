goog.provide('exfn.ascii.logic');
exfn.ascii.logic.get_ascii_breakdown = (function exfn$ascii$logic$get_ascii_breakdown(n){
return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"dec","dec",1888433436),n,new cljs.core.Keyword(null,"hex","hex",41691346),n.toString((16)),new cljs.core.Keyword(null,"bin","bin",-200999690),n.toString((2)),new cljs.core.Keyword(null,"char","char",-641587586),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$(n))], null);
});
exfn.ascii.logic.get_unicode = (function exfn$ascii$logic$get_unicode(){
return cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2200","\u2200","&#8704;","Mathematical","For All"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2201","\u2201","&#8705;","Mathematical","Complement"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2202","\u2202","&#8706;","Mathematical","Partial Differential"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2203","\u2203","&#8707;","Mathematical","There Exists"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2204","\u2204","&#8708;","Mathematical","There Doesn't Exist"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2205","\u2205","&#8709;","Mathematical","Empty set"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2206","\u2206","&#8710;","Mathematical","Increment"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2207","\u2207","&#8711;","Mathematical","Nabla"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2208","\u2208","&#8712;","Mathematical","Element of"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2209","\u2209","&#8713;","Mathematical","Not an element of"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+220A","\u220A","&#8714;","Mathematical","small Element of"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+220B","\u220B","&#8715;","Mathematical","Contains As Member"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+220C","\u220C","&#8716;","Mathematical","Does Not Contain As Member"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+220D","\u220D","&#8717;","Mathematical","Small Contains As Member"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+220E","\u220E","&#8718;","Mathematical","End Of Proof"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+220F","\u220F","&#8719;","Mathematical","N-Ary Product"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2210","\u2210","&#8720;","Mathematical","N-Ary Coproduct"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2211","\u2211","&#8721;","Mathematical","N-Ary Summation"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2212","\u2212","&#8722;","Mathematical","Minus Sign"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2213","\u2213","&#8723;","Mathematical","Minus-Or-Plus Sign"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2214","\u2214","&#8724;","Mathematical","Dot Plus"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2215","\u2215","&#8725;","Mathematical","Division Slash"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2216","\u2216","&#8726;","Mathematical","Set Minus"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2217","\u2217","&#8727;","Mathematical","Asterisk Operator"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2218","\u2218","&#8728;","Mathematical","Ring Operator"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2219","\u2219","&#8729;","Mathematical","Bullet Operator"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+221A","\u221A","&#8730;","Mathematical","Square Root"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+221B","\u221B","&#8731;","Mathematical","Cube Root"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+221C","\u221C","&#8732;","Mathematical","Fourth Root"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+221D","\u221D","&#8733;","Mathematical","Proportional To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+221E","\u221E","&#8734;","Mathematical","Infinity"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+221F","\u221F","&#8735;","Mathematical","Right Angle"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2220","\u2220","&#8736;","Mathematical","Angle"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2221","\u2221","&#8737;","Mathematical","Measured Angle"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2222","\u2222","&#8738;","Mathematical","Spherical Angle"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2223","\u2223","&#8739;","Mathematical","Divides"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2224","\u2224","&#8740;","Mathematical","Does Not Divide"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2225","\u2225","&#8741;","Mathematical","Parallel To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2226","\u2226","&#8742;","Mathematical","Not Parallel to"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2227","\u2227","&#8743;","Mathematical","Logical And"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2228","\u2228","&#8744;","Mathematical","Logical Or"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2229","\u2229","&#8745;","Mathematical","Intersection"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+222A","\u222A","&#8746;","Mathematical","Union"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+222B","\u222B","&#8747;","Mathematical","Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+222C","\u222C","&#8748;","Mathematical","Double Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+222D","\u222D","&#8749;","Mathematical","Triple Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+222E","\u222E","&#8750;","Mathematical","Contour Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+222F","\u222F","&#8751;","Mathematical","Surface Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2230","\u2230","&#8752;","Mathematical","Volume Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2231","\u2231","&#8753;","Mathematical","Clockwise Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2232","\u2232","&#8754;","Mathematical","Clockwise Contour Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2233","\u2233","&#8755;","Mathematical","Anticlockwise Contour Integral"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2234","\u2234","&#8756;","Mathematical","Therefore"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2235","\u2235","&#8757;","Mathematical","Because"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2236","\u2236","&#8758;","Mathematical","Ratio"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2237","\u2237","&#8759;","Mathematical","Proportion"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2238","\u2238","&#8760;","Mathematical","Dot Minus"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2239","\u2239","&#8761;","Mathematical","Excess"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+223A","\u223A","&#8762;","Mathematical","Geometric Proportion"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+223B","\u223B","&#8763;","Mathematical","Homothetic"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+223C","\u223C","&#8764;","Mathematical","Tilde Operator"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+223D","\u223D","&#8765;","Mathematical","Reversed Tilde"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+223E","\u223E","&#8766;","Mathematical","Inverted Lazy S"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+223F","\u223F","&#8767;","Mathematical","Sine Wave"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2240","\u2240","&#8768;","Mathematical","Wreath Product"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2241","\u2241","&#8769;","Mathematical","Not Tilde"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2242","\u2242","&#8770;","Mathematical","Minus Tilde"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2243","\u2243","&#8771;","Mathematical","Asymptotically Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2244","\u2244","&#8772;","Mathematical","Not Asymptotically Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2245","\u2245","&#8773;","Mathematical","Approximately Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2246","\u2246","&#8774;","Mathematical","Approximately But Not Actually Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2247","\u2247","&#8775;","Mathematical","Neither Approximately Nor Actually Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2248","\u2248","&#8776;","Mathematical","Almost Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2249","\u2249","&#8777;","Mathematical","Not Almost Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+224A","\u224A","&#8778;","Mathematical","Almost Equal Or Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+224B","\u224B","&#8779;","Mathematical","Triple Tilde"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+224C","\u224C","&#8780;","Mathematical","All Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+224D","\u224D","&#8781;","Mathematical","Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+224E","\u224E","&#8782;","Mathematical","Geometrically Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+224F","\u224F","&#8783;","Mathematical","Difference Between"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2250","\u2250","&#8784;","Mathematical","Approaches The Limit"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2251","\u2251","&#8785;","Mathematical","Geometrically Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2252","\u2252","&#8786;","Mathematical","Approximately Equal To Or The Image Of"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2253","\u2253","&#8787;","Mathematical","Image Of Or Approximately Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2254","\u2254","&#8788;","Mathematical","Colon Equals"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2255","\u2255","&#8789;","Mathematical","Equals Colon"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2256","\u2256","&#8790;","Mathematical","Ring In Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2257","\u2257","&#8791;","Mathematical","Ring Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2258","\u2258","&#8792;","Mathematical","Corresponds To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2259","\u2259","&#8793;","Mathematical","Estimates"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+225A","\u225A","&#8794;","Mathematical","Equiangular To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+225B","\u225B","&#8795;","Mathematical","Star Equals"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+225C","\u225C","&#8796;","Mathematical","Delta Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+225D","\u225D","&#8797;","Mathematical","Equal To By Definition"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+225E","\u225E","&#8798;","Mathematical","Measured By"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+225F","\u225F","&#8799;","Mathematical","Questioned Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2260","\u2260","&#8800;","Mathematical","Not Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2261","\u2261","&#8801;","Mathematical","Identical To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2262","\u2262","&#8802;","Mathematical","Not Identical To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2263","\u2263","&#8803;","Mathematical","Strictly Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2264","\u2264","&#8804;","Mathematical","Less-Than Or Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2265","\u2265","&#8805;","Mathematical","Greater-Than Or Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2266","\u2266","&#8806;","Mathematical","Less-Than Over Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2267","\u2267","&#8807;","Mathematical","Greater-Than Over Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2268","\u2268","&#8808;","Mathematical","Less-Than But Not Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2269","\u2269","&#8809;","Mathematical","Greater-Than But Not Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+226A","\u226A","&#8810;","Mathematical","Much Less-Than"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+226B","\u226B","&#8811;","Mathematical","Much Greater-Than"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+226C","\u226C","&#8812;","Mathematical","Between"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+226D","\u226D","&#8813;","Mathematical","Not Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+226E","\u226E","&#8814;","Mathematical","Not Less-Than"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+226F","\u226F","&#8815;","Mathematical","Not Greater-Than"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2270","\u2270","&#8816;","Mathematical","Neither Less-Than Nor Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2271","\u2271","&#8817;","Mathematical","Neither Greater-Than Nor Equal To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2272","\u2272","&#8818;","Mathematical","Less-Than Or Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2273","\u2273","&#8819;","Mathematical","Greater-Than Or Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2274","\u2274","&#8820;","Mathematical","Neither Less-Than Nor Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2275","\u2275","&#8821;","Mathematical","Neither Greater-Than Nor Equivalent To"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2276","\u2276","&#8822;","Mathematical","Less-Than Or Greater-Than"], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["U+2277","\u2277","&#8823;","Mathematical","Greater-Than Or Less-Than"], null)], true);
});

//# sourceMappingURL=exfn.ascii.logic.js.map
