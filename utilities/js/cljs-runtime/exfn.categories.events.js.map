{"version":3,"sources":["exfn/categories/events.cljs"],"mappings":";AAKA,yDAAA,zDAACA,yIAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;iBAAT,AAAAF,4CAAAD,WAAA,IAAA,xEAAWI;AAAX,sHACMF,9CACA,iDAAA,6DAAA,9GAACG,nBACD,wIAAA,mFAAA,gEAAA,3RAACC,uVAA6BF,5YAC9B,wZAAA,uDAAA,xcAACC;;AAER,yDAAA,zDAACP,mIAEA,cAAAS,HAAKL;AAAL,AAAA,IAAAM,aAAAD;QAAA,AAAAN,4CAAAO,WAAA,IAAA,/DAASL;cAAT,AAAAF,4CAAAO,WAAA,IAAA,rEAAWC;AAAX,sHACMP,9CACA,iDAAA,6DAAA,9GAACG,nBACD,wIAAA,mFAAA,gEAAA,3RAACC,4WAAuCG,jaACxC,0aAAA,uDAAA,1dAACJ;;AAER,yDAAA,zDAACK,+IAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaX;IAAbc,aAAAJ;QAAA,AAAAX,4CAAAe,WAAA,IAAA,/DAAmBb;IAAnBc,aAAA,AAAAhB,4CAAAe,WAAA,IAAA;kBAAA,AAAAf,4CAAAgB,WAAA,IAAA,zEAAsBC;oBAAtB,AAAAjB,4CAAAgB,WAAA,IAAA,3EAAkCE;AAAlC,AAAA,kDAAA,urBAAA,iEAAA,2CAAA,uDAAA,mDAAA,gLAAA,0FAAA,iOAAA,iEAAA,mFAAA,kFAAA,gEAAA,mFAAA,3pDACWjB,nBACA,sBAAA,mFAAA,gEAAA,iDAAA,1NAACI,kTAA8CY,rUAC/C,kVAAA,mFAAA,gEAAA,iDAAA,thBAACZ,wnBAAmDa,wRAE9B,iCAAA,hCAAKC,qGAA2CF,iFAChD,AAACG,2GACD,+BAAA,2CAAA,8DAAA,xIAACC;;AAInC,wCAAA,xCAAMC,wFAAgBC;AAAtB,AAAA,kDAAA,uDAAA,oDAAA,sHAAA,0FAAA,wDAAA,2CAAA,yDAAA,wDAAA,aAAA,iOAAA,iEAAA,mFAAA,wFAAA,gEAAA,mFAAA,99BAEoB,iCAAA,hCAAKJ,4HACL,AAACC,uLACOG,qJAER,+BAAA,2CAAA,8DAAA,xIAACF","names":["re_frame.core.reg_event_db","p__17120","vec__17121","cljs.core.nth","db","_","categories","cljs.core.assoc","cljs.core/assoc-in","p__17141","vec__17142","summary","re_frame.core.reg_event_fx","p__17147","p__17148","map__17171","cljs.core/--destructure-map","cljs.core.get","vec__17172","vec__17175","category-id","category-name","exfn.shared.logic/base-and-port","ajax.core/json-request-format","ajax.core/json-response-format","exfn.categories.events/categories-api","year"],"sourcesContent":["(ns exfn.categories.events\n  (:require [re-frame.core :as rf]\n            [ajax.core :as ajax]\n            [exfn.shared.logic :as lgc]))\n\n(rf/reg-event-db\n :process-categories\n (fn [db [_ categories]]\n   (-> db\n       (assoc :loading? false)\n       (assoc-in [:categories :grid] categories)\n       (assoc :error nil))))\n\n(rf/reg-event-db\n :process-summary\n (fn [db [_ summary]]\n   (-> db\n       (assoc :loading? false)\n       (assoc-in [:categories :breakdown-grid] summary)\n       (assoc :error nil))))\n\n(rf/reg-event-fx\n :get-category-summary\n (fn [{:keys [db]} [_ [category-id category-name]]]\n   {:db (-> db\n            (assoc-in [:categories :ui :selected-category] category-id)\n            (assoc-in [:categories :ui :selected-category-name] category-name))\n    :http-xhrio {:method          :get\n                 :uri             (str lgc/base-and-port \"/categories-breakdown/\" category-id)\n                 :format          (ajax/json-request-format)\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success      [:process-summary]\n                 :on-failure      [:fail]}}))\n\n(defn categories-api [year]\n  {:method          :post\n   :uri             (str lgc/base-and-port \"/categories-breakdown\")\n   :format          (ajax/json-request-format)\n   :params          {:year  year\n                     :month -1}\n   :response-format (ajax/json-response-format {:keywords? true})\n   :on-success      [:process-categories]\n   :on-failure      [:fail]})\n"]}