{"version":3,"sources":["exfn/total_income/events.cljs"],"mappings":";AAKA,yDAAA,zDAACA,6IAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;cAAT,AAAAF,4CAAAD,WAAA,IAAA,rEAAWI;AAAX,sHACMF,9CACA,iDAAA,6DAAA,9GAACG,nBACD,wIAAA,mFAAA,2DAAA,tRAACC,kVAA0BF,vYAC3B,gZAAA,uDAAA,hcAACC;;AAER,4CAAA,5CAAME,gGAAkBC;AAAxB,AAAA,kDAAA,uDAAA,mDAAA,iKAAA,0FAAA,iOAAA,iEAAA,mFAAA,4FAAA,gEAAA,mFAAA,5yBAEoB,iCAAA,hCAAKC,6FAAmCD,0EACxC,AAACE,2GACD,+BAAA,2CAAA,8DAAA,xIAACC;;AAIrB,yDAAA,zDAACC,mJAEA,WAAAC,SAAkBV;AAAlB,AAAA,IAAAW,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaZ;AAAb,AAAA,kDAAA,mDAAA,HACOA,oEACQ,AAACK,0CAAiB,AAAA,kFAAA,AAAA,2FAAIL;;AAEtC,yDAAA,zDAACU,mKAEA,WAAAK,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAJ,4BAAAI;SAAA,AAAAH,4CAAAG,eAAA,hEAAajB;IAAbkB,aAAAF;QAAA,AAAAjB,4CAAAmB,WAAA,IAAA,/DAAmBjB;iBAAnB,AAAAF,4CAAAmB,WAAA,IAAA,xEAAqBC;AAArB,AAAA,kDAAA,mDAAA,iEAAA,2CAAA,uDAAA,oDAAA,6GAAA,0FAAA,iOAAA,mEAAA,iEAAA,mFAAA,kGAAA,gEAAA,mFAAA,9kCACOnB,6QAE0B,iCAAA,hCAAKO,mHACL,AAACC,2GACD,+BAAA,2CAAA,8DAAA,xIAACC,8MACDU","names":["re_frame.core.reg_event_db","p__17044","vec__17045","cljs.core.nth","db","_","incomes","cljs.core.assoc","cljs.core/assoc-in","exfn.total-income.events/total-income-api","year","exfn.shared.logic/base-and-port","ajax.core/json-request-format","ajax.core/json-response-format","re_frame.core.reg_event_fx","p__17071","map__17076","cljs.core/--destructure-map","cljs.core.get","p__17080","p__17081","map__17085","vec__17086","deductions"],"sourcesContent":["(ns exfn.total-income.events\n  (:require [ajax.core :as ajax]\n            [exfn.shared.logic :as lgc]\n            [re-frame.core :as rf]))\n\n(rf/reg-event-db\n :process-total-income\n (fn [db [_ incomes]]\n   (-> db\n       (assoc :loading? false)\n       (assoc-in [:incomes :grid] incomes)\n       (assoc :error nil))))\n\n(defn total-income-api [year]\n  {:method          :get\n   :uri             (str lgc/base-and-port \"/total-income/\" year)\n   :format          (ajax/json-request-format)\n   :response-format (ajax/json-response-format {:keywords? true})\n   :on-success      [:process-total-income]\n   :on-failure      [:fail]})\n\n(rf/reg-event-fx\n :process-account-update\n (fn [{:keys [db]} _]\n   {:db db\n    :http-xhrio (total-income-api (-> db :settings :year))}))\n\n(rf/reg-event-fx\n :save-missing-salary-deductions\n (fn [{:keys [db]} [_ deductions]]\n   {:db db\n    :http-xhrio {:method          :post\n                 :uri             (str lgc/base-and-port \"/TotalIncome\")\n                 :format          (ajax/json-request-format)\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :params          deductions\n                 :on-success      [:process-account-update]\n                 :on-failure      [:fail]}}))"]}