{"version":3,"sources":["exfn/helpers.cljs"],"mappings":";AAGA,AAAA,AAAMA,AAAyBC;AAA/B,AACE,AAAA,AAAW,AAACC,AAAO,AAAAC,AAAoCS;AAApC,AAAA,AAAAR,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAA+BO;AAA/B,AAAAH,AAAAJ,AAAA,AAAaK;AAAb,AAAAD,AAAAJ,AAAA,AAAiBM;AAAjB,AACE,AAAI,AAAI,AAAA,AAACG,AAAKD,AAAG,AAAA,AAACE,AAA4BF;AAC5C,AAAA,AAACG,AAAMJ,AAAc,AAAA,AAAKD;;AACtBC,AACA,AAAA,AAACI,AAAgB,AAAA,AAAKL,AAASD,AAC/B,AAAA,AAACO,AAAYC;;AAL7B,AAAA,AAAA,AAAA,AAAA,AAOQ,AAAA,AAAA,AAACC,AAAUjB","names":["exfn.helpers/get-source-line-numbers","source","cljs.core.reduce","p__30003","map__30004","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","cur","line-nos","acc","i","cljs.core._EQ_","clojure.string/starts-with?","cljs.core.assoc","cljs.core.update","cljs.core/inc","clojure.string.split"],"sourcesContent":["(ns exfn.helpers\r\n  (:require [clojure.string :as str]))\r\n\r\n(defn get-source-line-numbers [source]\r\n  (:line-nos (reduce (fn [{:keys [cur line-nos] :as acc} i]\r\n                       (if (or (= \"\" i) (clojure.string/starts-with? i \";\"))\r\n                         (assoc acc :line-nos (str line-nos \"\\n\"))\r\n                         (-> acc\r\n                             (assoc :line-nos (str line-nos cur \"\\n\"))\r\n                             (update :cur inc))))\r\n                     {:cur 0 :line-nos \"\"}\r\n                     (str/split source #\"\\r?\\n\" -1))))"]}