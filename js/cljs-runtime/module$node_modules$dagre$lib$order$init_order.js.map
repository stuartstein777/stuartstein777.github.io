{
"version":3,
"file":"module$node_modules$dagre$lib$order$init_order.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,8CAAf,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3G,IAAIC,EAAIH,OAAA,CAAQ,sCAAR,CAERC,OAAA,CAAOC,OAAP,CAaAE,QAAkB,CAACC,CAAD,CAAI,CAQpBC,QAASA,IAAG,CAACC,CAAD,CAAI,CACd,GAAI,CAAAJ,CAAA,CAAEK,GAAF,CAAMC,OAAN,CAAeF,CAAf,CAAJ,CAAA,CACAE,OAAA,CAAQF,CAAR,CAAA,CAAa,CAAA,CACb,KAAIG,KAAOL,CAAA,CAAEK,IAAF,CAAOH,CAAP,CACXI,OAAA,CAAOD,IAAP,CAAYE,IAAZ,CAAA,CAAkBC,IAAlB,CAAuBN,CAAvB,CACAJ,EAAA,CAAEW,OAAF,CAAUT,CAAA,CAAEU,UAAF,CAAaR,CAAb,CAAV,CAA2BD,GAA3B,CAJA,CADc,CAPhB,IAAIG,QAAU,EAAd,CACIO,YAAcb,CAAA,CAAEc,MAAF,CAASZ,CAAA,CAAEa,KAAF,EAAT,CAAoB,QAAQ,CAACX,CAAD,CAAI,CAChD,MAAO,CAACF,CAAA,CAAEc,QAAF,CAAWZ,CAAX,CAAD,CAAea,MAD0B,CAAhC,CADlB,CAIIC,QAAUlB,CAAA,CAAEmB,GAAF,CAAMnB,CAAA,CAAEoB,GAAF,CAAMP,WAAN,CAAmB,QAAQ,CAACT,CAAD,CAAI,CAAE,MAAOF,EAAA,CAAEK,IAAF,CAAOH,CAAP,CAAP,CAAiBK,IAAnB,CAA/B,CAAN,CAJd,CAKID,OAASR,CAAA,CAAEoB,GAAF,CAAMpB,CAAA,CAAEqB,KAAF,CAAQH,OAAR,CAAkB,CAAlB,CAAN;AAA4B,QAAQ,EAAG,CAAE,MAAO,EAAT,CAAvC,CAUTI,YAAAA,CAAYtB,CAAA,CAAEuB,MAAF,CAASV,WAAT,CAAsB,QAAQ,CAACT,CAAD,CAAI,CAAE,MAAOF,EAAA,CAAEK,IAAF,CAAOH,CAAP,CAAP,CAAiBK,IAAnB,CAAlC,CAChBT,EAAA,CAAEW,OAAF,CAAUW,WAAV,CAAqBnB,GAArB,CAEA,OAAOK,OAnBa,CAlBqF;",
"sources":["node_modules/dagre/lib/order/init-order.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dagre$lib$order$init_order\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function(v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; }));\n  var layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","_","initOrder","g","dfs","v","has","visited","node","layers","rank","push","forEach","successors","simpleNodes","filter","nodes","children","length","maxRank","max","map","range","orderedVs","sortBy"]
}
