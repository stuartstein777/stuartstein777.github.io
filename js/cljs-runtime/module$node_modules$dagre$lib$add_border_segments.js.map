{
"version":3,
"file":"module$node_modules$dagre$lib$add_border_segments.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6B9GC,QAASA,cAAa,CAACC,CAAD,CAAIC,IAAJ,CAAUC,MAAV,CAAkBC,EAAlB,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoC,CAExD,IAAIC,KAAOF,MAAA,CAAOH,IAAP,CAAA,CAAaI,IAAb,CAAoB,CAApB,CACPE,OAAAA,CAAOC,IAAA,CAAKC,YAAL,CAAkBT,CAAlB,CAAqB,QAArB,CAFCU,CAAEC,MAAO,CAATD,CAAYE,OAAQ,CAApBF,CAAuBL,KAAMA,IAA7BK,CAAmCG,WAAYZ,IAA/CS,CAED,CAAsCR,MAAtC,CACXE,OAAA,CAAOH,IAAP,CAAA,CAAaI,IAAb,CAAA,CAAqBE,MACrBP,EAAA,CAAEc,SAAF,CAAYP,MAAZ,CAAkBJ,EAAlB,CACIG,KAAJ,EACEN,CAAA,CAAEe,OAAF,CAAUT,IAAV,CAAgBC,MAAhB,CAAsB,CAAES,OAAQ,CAAV,CAAtB,CAPsD,CA5B1D,IAAIC,EAAIrB,OAAA,CAAQ,sCAAR,CAAR,CACIY,KAAOZ,OAAA,CAAQ,oCAAR,CAEXC,OAAA,CAAOC,OAAP,CAEAoB,QAA0B,CAAClB,CAAD,CAAI,CAC5BmB,QAASA,IAAG,CAACC,CAAD,CAAI,CACd,IAAIC;AAAWrB,CAAA,CAAEqB,QAAF,CAAWD,CAAX,CAAf,CACIE,KAAOtB,CAAA,CAAEsB,IAAF,CAAOF,CAAP,CACPC,SAAJ,CAAaE,MAAb,EACEN,CAAA,CAAEO,OAAF,CAAUH,QAAV,CAAoBF,GAApB,CAGF,IAAIF,CAAA,CAAEQ,GAAF,CAAMH,IAAN,CAAY,SAAZ,CAAJ,CAA4B,CAC1BA,IAAA,CAAKI,UAAL,CAAkB,EAClBJ,KAAA,CAAKK,WAAL,CAAmB,EACVtB,SAAAA,CAAOiB,IAAPjB,CAAYuB,OAArB,KAAK,IAAyBC,QAAUP,IAAVO,CAAeA,OAAfA,CAAyB,CAAvD,CACExB,QADF,CACSwB,OADT,CAEE,EAAExB,QAFJ,CAGEN,aAAA,CAAcC,CAAd,CAAiB,YAAjB,CAA+B,KAA/B,CAAsCoB,CAAtC,CAAyCE,IAAzC,CAA+CjB,QAA/C,CACA,CAAAN,aAAA,CAAcC,CAAd,CAAiB,aAAjB,CAAgC,KAAhC,CAAuCoB,CAAvC,CAA0CE,IAA1C,CAAgDjB,QAAhD,CAPwB,CAPd,CAmBhBY,CAAA,CAAEO,OAAF,CAAUxB,CAAA,CAAEqB,QAAF,EAAV,CAAwBF,GAAxB,CApB4B,CANgF;",
"sources":["node_modules/dagre/lib/add-border-segments.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dagre$lib$add_border_segments\"] = function(global,require,module,exports) {\nvar _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n        rank < maxRank;\n        ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","addBorderNode","g","prop","prefix","sg","sgNode","rank","prev","curr","util","addDummyNode","label","width","height","borderType","setParent","setEdge","weight","_","addBorderSegments","dfs","v","children","node","length","forEach","has","borderLeft","borderRight","minRank","maxRank"]
}
