{
"version":3,
"file":"module$node_modules$graphlib$lib$json.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/graphlib/lib/json.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphlib$lib$json\"] = function(global,require,module,exports) {\nvar _ = require(\"./lodash\");\nvar Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","writeNodes","g","_","map","nodes","v","nodeValue","node","parent","isUndefined","value","writeEdges","edges","e","edgeValue","edge","w","name","Graph","write","json","options","directed","isDirected","multigraph","isMultigraph","compound","isCompound","graph","clone","read","setGraph","each","entry","setNode","setParent","setEdge"]
}
