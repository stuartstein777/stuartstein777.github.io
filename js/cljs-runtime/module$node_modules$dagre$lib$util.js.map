{
"version":3,
"file":"module$node_modules$dagre$lib$util.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/dagre/lib/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dagre$lib$util\"] = function(global,require,module,exports) {\n/* eslint \"no-console\": off */\n\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","addDummyNode","g","type","attrs","name","v","_","uniqueId","hasNode","dummy","setNode","maxRank","max","map","nodes","rank","node","isUndefined","Graph","simplify","simplified","setGraph","graph","forEach","edges","e","simpleLabel","edge","w","weight","minlen","label","setEdge","Math","asNonCompoundGraph","multigraph","isMultigraph","children","length","successorWeights","weightMap","sucs","outEdges","zipObject","predecessorWeights","preds","inEdges","intersectRect","rect","point","x","y","dx","dy","width","h","height","Error","abs","sx","sy","buildLayerMatrix","layering","range","order","normalizeRanks","min","has","removeEmptyRanks","offset","layers","push","delta","nodeRankFactor","vs","i","addBorderNode","prefix","arguments","partition","collection","fn","result","lhs","rhs","value","time","start","now","console","log","notime"]
}
