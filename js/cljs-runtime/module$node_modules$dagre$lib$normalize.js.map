{
"version":3,
"file":"module$node_modules$dagre$lib$normalize.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/dagre/lib/normalize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dagre$lib$normalize\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","_","util","run","g","graph","dummyChains","forEach","edges","edge","v","vRank","node","rank","w","wRank","name","edgeLabel","labelRank","removeEdge","i","points","attrs","width","height","edgeObj","dummy","addDummyNode","labelpos","setEdge","weight","push","undo","origLabel","successors","removeNode","x","y"]
}
