{"version":3,"sources":["exfn/subs.cljs"],"mappings":";AAGA,AAAA,AAACA,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAOD;;AAEV,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAASD;;AAEZ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAM,AAAA,AAASD;;AAElB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAcD;;AAEjB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAWD;;AAEd,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAaD;;AAEhB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA","names":["re_frame.core.reg_sub","db","_"],"sourcesContent":["(ns exfn.subs\r\n  (:require [re-frame.core :as rf]))\r\n\r\n(rf/reg-sub\r\n :code\r\n (fn [db _]\r\n   (:code db)))\r\n\r\n(rf/reg-sub\r\n :source\r\n (fn [db _]\r\n   (:source db)))\r\n\r\n(rf/reg-sub\r\n :eip\r\n (fn [db _]\r\n   (:eip (:memory db))))\r\n\r\n(rf/reg-sub\r\n :breakpoints\r\n (fn [db _]\r\n   (:breakpoints db)))\r\n\r\n(rf/reg-sub\r\n :running?\r\n (fn [db _]\r\n   (:running? db)))\r\n\r\n(rf/reg-sub\r\n :scroll-pos\r\n (fn [db _]\r\n   (:scroll-pos db)))\r\n\r\n(rf/reg-sub\r\n :registers\r\n (fn [db _]\r\n   (-> db :memory :registers)))\r\n\r\n(rf/reg-sub\r\n :internal-registers\r\n (fn [db _]\r\n   (-> db :memory :internal-registers)))\r\n\r\n(rf/reg-sub\r\n :stack\r\n (fn [db _]\r\n   (-> db :memory :stack)))\r\n\r\n(rf/reg-sub\r\n :eip-stack\r\n (fn [db _]\r\n   (-> db :memory :eip-stack)))\r\n\r\n(rf/reg-sub\r\n :symbols\r\n (fn [db _]\r\n   (-> db :memory :symbol-table)))\r\n\r\n(rf/reg-sub\r\n :finished?\r\n (fn [db _]\r\n   (db :finished?)))\r\n\r\n(rf/reg-sub\r\n :has-parsed-code?\r\n (fn [db _]\r\n   (db :has-parsed-code?)))"]}