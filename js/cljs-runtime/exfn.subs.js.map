<<<<<<< HEAD
{"version":3,"sources":["exfn/subs.cljs"],"mappings":";AAGA,AAAA,AAACA,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAOD;;AAEV,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAASD;;AAEZ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAM,AAAA,AAASD;;AAElB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAcD;;AAEjB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAWD;;AAEd,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAaD;;AAEhB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID","names":["re_frame.core.reg_sub","db","_"],"sourcesContent":["(ns exfn.subs\n  (:require [re-frame.core :as rf]))\n\n(rf/reg-sub\n :code\n (fn [db _]\n   (:code db)))\n\n(rf/reg-sub\n :source\n (fn [db _]\n   (:source db)))\n\n(rf/reg-sub\n :eip\n (fn [db _]\n   (:eip (:memory db))))\n\n(rf/reg-sub\n :breakpoints\n (fn [db _]\n   (:breakpoints db)))\n\n(rf/reg-sub\n :running?\n (fn [db _]\n   (:running? db)))\n\n(rf/reg-sub\n :scroll-pos\n (fn [db _]\n   (:scroll-pos db)))\n\n(rf/reg-sub\n :registers\n (fn [db _]\n   (-> db :memory :registers)))\n\n(rf/reg-sub\n :internal-registers\n (fn [db _]\n   (-> db :memory :internal-registers)))\n\n(rf/reg-sub\n :stack\n (fn [db _]\n   (-> db :memory :stack)))\n\n(rf/reg-sub\n :eip-stack\n (fn [db _]\n   (-> db :memory :eip-stack)))\n\n(rf/reg-sub\n :symbols\n (fn [db _]\n   (-> db :memory :symbol-table)))\n\n(rf/reg-sub\n :finished?\n (fn [db _]\n   (db :finished?)))\n\n(rf/reg-sub\n :has-parsed-code?\n (fn [db _]\n   (db :has-parsed-code?)))\n\n(rf/reg-sub\n :running-speed\n (fn [db _]\n   (db :running-speed)))\n\n(rf/reg-sub\n :on-breakpoint\n (fn [db _]\n   (db :on-breakpoint)))\n\n(rf/reg-sub\n :last-edit-register\n (fn [db _]\n   (-> db :memory :last-edit-register)))"]}
=======
{"version":3,"sources":["exfn/subs.cljs"],"mappings":";AAGA,AAAA,AAACA,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAOD;;AAEV,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAASD;;AAEZ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAM,AAAA,AAASD;;AAElB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAcD;;AAEjB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAWD;;AAEd,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAaD;;AAEhB,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID;;AAEP,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAACD,AAAAA,AAAAA;;AAEJ,AAAA,AAACD,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAID","names":["re_frame.core.reg_sub","db","_"],"sourcesContent":["(ns exfn.subs\r\n  (:require [re-frame.core :as rf]))\r\n\r\n(rf/reg-sub\r\n :code\r\n (fn [db _]\r\n   (:code db)))\r\n\r\n(rf/reg-sub\r\n :source\r\n (fn [db _]\r\n   (:source db)))\r\n\r\n(rf/reg-sub\r\n :eip\r\n (fn [db _]\r\n   (:eip (:memory db))))\r\n\r\n(rf/reg-sub\r\n :breakpoints\r\n (fn [db _]\r\n   (:breakpoints db)))\r\n\r\n(rf/reg-sub\r\n :running?\r\n (fn [db _]\r\n   (:running? db)))\r\n\r\n(rf/reg-sub\r\n :scroll-pos\r\n (fn [db _]\r\n   (:scroll-pos db)))\r\n\r\n(rf/reg-sub\r\n :registers\r\n (fn [db _]\r\n   (-> db :memory :registers)))\r\n\r\n(rf/reg-sub\r\n :internal-registers\r\n (fn [db _]\r\n   (-> db :memory :internal-registers)))\r\n\r\n(rf/reg-sub\r\n :stack\r\n (fn [db _]\r\n   (-> db :memory :stack)))\r\n\r\n(rf/reg-sub\r\n :eip-stack\r\n (fn [db _]\r\n   (-> db :memory :eip-stack)))\r\n\r\n(rf/reg-sub\r\n :symbols\r\n (fn [db _]\r\n   (-> db :memory :symbol-table)))\r\n\r\n(rf/reg-sub\r\n :finished?\r\n (fn [db _]\r\n   (db :finished?)))\r\n\r\n(rf/reg-sub\r\n :has-parsed-code?\r\n (fn [db _]\r\n   (db :has-parsed-code?)))\r\n\r\n(rf/reg-sub\r\n :running-speed\r\n (fn [db _]\r\n   (db :running-speed)))\r\n\r\n(rf/reg-sub\r\n :on-breakpoint\r\n (fn [db _]\r\n   (db :on-breakpoint)))\r\n\r\n(rf/reg-sub\r\n :last-edit-register\r\n (fn [db _]\r\n   (-> db :memory :last-edit-register)))"]}
>>>>>>> 7c6035e4298a1da3cc9f8039115d74e442a71da9
