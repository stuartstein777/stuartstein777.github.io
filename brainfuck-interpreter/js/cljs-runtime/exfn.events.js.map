{"version":3,"sources":["exfn/events.cljs"],"mappings":";;;;AAIA,AAAA,AAACA,AAEA,AAAKC,AAAEA;AAAP,AAAA,AAAA,AAAA,AAAA,AAAA;;AAKD,AAAA,AAACD,AAEA,AAAAE,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASF;AAAT,AAAAG,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AAAA,AAACC,AAAMF,AAAWC;;AAGrB,AAAA,AAACN,AAEA,AAAAQ,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAJ,AAAAK,AAAA,AAAA,AAASR;AAAT,AAAAG,AAAAK,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAACH,AAAMF,AAAUK;;AAGpB,AAAA,AAACV,AAEA,AAAAW,AAAKN;AAAL,AAAA,AAAAO,AAAAD;AAAA,AAAAP,AAAAQ,AAAA,AAAA,AAASX;AAAT,AAAAG,AAAAQ,AAAA,AAAA,AAAWX;AAAX,AACE,AAAMK,AAAO,AAAA,AAASD;AAChBK,AAAO,AAAA,AAAQL;AADrB,AAEK,AAAA,AAACE,AAAMF,AAAW,AAACQ,AAAcP,AAAOI;;AAEhD,AAAA,AAACV,AAEA,AAAAc,AAAKT;AAAL,AAAA,AAAAU,AAAAD;AAAA,AAAAV,AAAAW,AAAA,AAAA,AAASd;AAATe,AAAA,AAAAZ,AAAAW,AAAA,AAAA;AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAYC;AAAZ,AAAAb,AAAAY,AAAA,AAAA,AAAoBN;AAApB,AACML,AACA,AAAA,AAACE,AAAcU,AACf,AAAA,AAACV,AAAaG,AACd,AAAA,AAAA,AAACH","names":["re_frame.core.reg_event_db","_","p__33214","vec__33215","cljs.core.nth","db","source","cljs.core.assoc","p__33218","vec__33219","input","p__33222","vec__33223","exfn.interpreter/brain-fuck","p__33228","vec__33229","vec__33232","example"],"sourcesContent":["(ns exfn.events\n  (:require [re-frame.core :as rf]\n            [exfn.interpreter :as bf]))\n\n(rf/reg-event-db\n :initialize\n (fn [_ _]\n   {:running? false\n    :source \"++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.\"}))\n\n;; Handles the event where the user types into the source code textarea\n(rf/reg-event-db\n :update-source\n (fn [db [_ source]]\n   (assoc db :source source)))\n\n;; Handles the event where the user types into the input textarea\n(rf/reg-event-db\n :update-input\n (fn [db [_ input]]\n   (assoc db :input input)))\n\n;; Handle the execute click\n(rf/reg-event-db\n :execute\n (fn [db [_ _]]\n   (let [source (:source db)\n         input  (:input db)]\n        (assoc db :output (bf/brain-fuck source input)))))\n\n(rf/reg-event-db\n :load-example\n (fn [db [_ [example input]]]\n   (-> db\n       (assoc :source example)\n       (assoc :input input)\n       (assoc :output \"\"))))"]}